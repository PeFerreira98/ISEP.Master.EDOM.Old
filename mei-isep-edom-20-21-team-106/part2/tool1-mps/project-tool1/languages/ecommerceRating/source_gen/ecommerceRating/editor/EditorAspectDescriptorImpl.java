package ecommerceRating.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.EditorAspectDescriptorBase;
import org.jetbrains.annotations.NotNull;
import java.util.Collection;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import java.util.Collections;
import jetbrains.mps.openapi.editor.descriptor.SubstituteMenu;
import jetbrains.mps.lang.smodel.ConceptSwitchIndex;
import jetbrains.mps.lang.smodel.ConceptSwitchIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public class EditorAspectDescriptorImpl extends EditorAspectDescriptorBase {
  @NotNull
  public Collection<ConceptEditor> getDeclaredEditors(SAbstractConcept concept) {
    SAbstractConcept cncpt = ((SAbstractConcept) concept);
    switch (conceptIndex.index(cncpt)) {
      case 0:
        return Collections.<ConceptEditor>singletonList(new ApprovalProcess_Editor());
      case 1:
        return Collections.<ConceptEditor>singletonList(new ApprovalStart_Editor());
      case 2:
        return Collections.<ConceptEditor>singletonList(new ApprovalStepReference_Editor());
      case 3:
        return Collections.<ConceptEditor>singletonList(new Attribute_Editor());
      case 4:
        return Collections.<ConceptEditor>singletonList(new AttributeReference_Editor());
      case 5:
        return Collections.<ConceptEditor>singletonList(new Comment_Editor());
      case 6:
        return Collections.<ConceptEditor>singletonList(new Item_Editor());
      case 7:
        return Collections.<ConceptEditor>singletonList(new ItemReference_Editor());
      case 8:
        return Collections.<ConceptEditor>singletonList(new Model_Editor());
      case 9:
        return Collections.<ConceptEditor>singletonList(new Rate_Editor());
      case 10:
        return Collections.<ConceptEditor>singletonList(new Review_Editor());
      case 11:
        return Collections.<ConceptEditor>singletonList(new UserReference_Editor());
      default:
    }
    return Collections.<ConceptEditor>emptyList();
  }


  @NotNull
  @Override
  public Collection<SubstituteMenu> getDeclaredDefaultSubstituteMenus(SAbstractConcept concept) {
    SAbstractConcept cncpt = concept;
    switch (conceptIndex1.index(cncpt)) {
      case 0:
        return Collections.<SubstituteMenu>singletonList(new ApprovalStart_SubstituteMenu());
      case 1:
        return Collections.<SubstituteMenu>singletonList(new ApprovalStepReference_SubstituteMenu());
      case 2:
        return Collections.<SubstituteMenu>singletonList(new AttributeReference_SubstituteMenu());
      case 3:
        return Collections.<SubstituteMenu>singletonList(new UserReference_SubstituteMenu());
      default:
    }
    return Collections.<SubstituteMenu>emptyList();
  }

  private static final ConceptSwitchIndex conceptIndex = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0x358cfdcb6f874ce6L, 0x89199392c76fa40bL, 0xf8b6326dc450db3L), MetaIdFactory.conceptId(0x358cfdcb6f874ce6L, 0x89199392c76fa40bL, 0xf8b6326dc450db4L), MetaIdFactory.conceptId(0x358cfdcb6f874ce6L, 0x89199392c76fa40bL, 0xf8b6326dc450db6L), MetaIdFactory.conceptId(0x358cfdcb6f874ce6L, 0x89199392c76fa40bL, 0xf8b6326dc450db7L), MetaIdFactory.conceptId(0x358cfdcb6f874ce6L, 0x89199392c76fa40bL, 0xf8b6326dc450db8L), MetaIdFactory.conceptId(0x358cfdcb6f874ce6L, 0x89199392c76fa40bL, 0xf8b6326dc450db9L), MetaIdFactory.conceptId(0x358cfdcb6f874ce6L, 0x89199392c76fa40bL, 0xf8b6326dc450dbcL), MetaIdFactory.conceptId(0x358cfdcb6f874ce6L, 0x89199392c76fa40bL, 0xf8b6326dc450dbdL), MetaIdFactory.conceptId(0x358cfdcb6f874ce6L, 0x89199392c76fa40bL, 0xf8b6326dc450dbeL), MetaIdFactory.conceptId(0x358cfdcb6f874ce6L, 0x89199392c76fa40bL, 0xf8b6326dc450dbfL), MetaIdFactory.conceptId(0x358cfdcb6f874ce6L, 0x89199392c76fa40bL, 0xf8b6326dc450dc0L), MetaIdFactory.conceptId(0x358cfdcb6f874ce6L, 0x89199392c76fa40bL, 0x69d73f9ff5681ca9L)).seal();
  private static final ConceptSwitchIndex conceptIndex1 = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0x358cfdcb6f874ce6L, 0x89199392c76fa40bL, 0xf8b6326dc450db4L), MetaIdFactory.conceptId(0x358cfdcb6f874ce6L, 0x89199392c76fa40bL, 0xf8b6326dc450db6L), MetaIdFactory.conceptId(0x358cfdcb6f874ce6L, 0x89199392c76fa40bL, 0xf8b6326dc450db8L), MetaIdFactory.conceptId(0x358cfdcb6f874ce6L, 0x89199392c76fa40bL, 0x69d73f9ff5681ca9L)).seal();
}
