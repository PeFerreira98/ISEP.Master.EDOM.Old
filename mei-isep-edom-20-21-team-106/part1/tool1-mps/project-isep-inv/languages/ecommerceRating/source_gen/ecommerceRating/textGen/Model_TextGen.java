package ecommerceRating.textGen;

/*Generated by MPS */

import jetbrains.mps.text.rt.TextGenDescriptorBase;
import jetbrains.mps.text.rt.TextGenContext;
import jetbrains.mps.text.impl.TextGenSupport;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import org.jetbrains.mps.openapi.language.SProperty;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SReferenceLink;
import org.jetbrains.mps.openapi.language.SContainmentLink;

public class Model_TextGen extends TextGenDescriptorBase {
  @Override
  public void generateText(final TextGenContext ctx) {
    final TextGenSupport tgs = new TextGenSupport(ctx);
    tgs.append("#Model ");
    tgs.append(SPropertyOperations.getString(ctx.getPrimaryInput(), PROPS.name$MnvL));
    tgs.newLine();
    tgs.append("@startuml");
    tgs.newLine();

    for (SNode user : ListSequence.fromList(SLinkOperations.getChildren(ctx.getPrimaryInput(), LINKS.Users$1K91))) {
      tgs.append("class ");
      tgs.append(SPropertyOperations.getString(user, PROPS.name$MnvL));
      tgs.append("{ \n");

      for (SNode attr : ListSequence.fromList(SLinkOperations.getChildren(user, LINKS.Attributes$DC3n))) {
        tgs.append(SPropertyOperations.getString(SLinkOperations.getTarget(((SNode) attr), LINKS.attribute$4Gbd), PROPS.name$MnvL));
        tgs.append(" : ");
        tgs.append(SPropertyOperations.getString(SLinkOperations.getTarget(SLinkOperations.getTarget(((SNode) attr), LINKS.attribute$4Gbd), LINKS.Type$dLI0), PROPS.name$MnvL));
        tgs.newLine();
      }
      tgs.append("} \n\n");
    }

    for (SNode item : ListSequence.fromList(SLinkOperations.getChildren(ctx.getPrimaryInput(), LINKS.Items$1KB3))) {
      tgs.append("class ");
      tgs.append(SPropertyOperations.getString(item, PROPS.name$MnvL));
      tgs.append("{\n");

      for (SNode attr : ListSequence.fromList(SLinkOperations.getChildren(item, LINKS.Attributes$Vo_d))) {
        tgs.append(SPropertyOperations.getString(SLinkOperations.getTarget(((SNode) attr), LINKS.attribute$4Gbd), PROPS.name$MnvL));
        tgs.append(" : ");
        tgs.append(SPropertyOperations.getString(SLinkOperations.getTarget(SLinkOperations.getTarget(((SNode) attr), LINKS.attribute$4Gbd), LINKS.Type$dLI0), PROPS.name$MnvL));
        tgs.newLine();
      }

      tgs.append("}");
      tgs.newLine();
      tgs.newLine();
    }

    if (SLinkOperations.getTarget(ctx.getPrimaryInput(), LINKS.Rates$Tz$_) != null) {
      tgs.append("class ");
      tgs.append(SPropertyOperations.getString(SLinkOperations.getTarget(ctx.getPrimaryInput(), LINKS.Rates$Tz$_), PROPS.name$MnvL));
      tgs.append("{\n");
      for (SNode attr : ListSequence.fromList(SLinkOperations.getChildren(SLinkOperations.getTarget(ctx.getPrimaryInput(), LINKS.Rates$Tz$_), LINKS.Attributes$Xkyx))) {
        tgs.append(SPropertyOperations.getString(SLinkOperations.getTarget(((SNode) attr), LINKS.attribute$4Gbd), PROPS.name$MnvL));
        tgs.append(" : ");
        tgs.append(SPropertyOperations.getString(SLinkOperations.getTarget(SLinkOperations.getTarget(((SNode) attr), LINKS.attribute$4Gbd), LINKS.Type$dLI0), PROPS.name$MnvL));
        tgs.newLine();
      }
      tgs.append("}");
      tgs.newLine();
      tgs.newLine();
    }

    if (SLinkOperations.getTarget(ctx.getPrimaryInput(), LINKS.Comments$Ttub) != null) {
      tgs.append("class ");
      tgs.append(SPropertyOperations.getString(SLinkOperations.getTarget(ctx.getPrimaryInput(), LINKS.Comments$Ttub), PROPS.name$MnvL));
      tgs.append("{\n");
      for (SNode attr : ListSequence.fromList(SLinkOperations.getChildren(SLinkOperations.getTarget(ctx.getPrimaryInput(), LINKS.Comments$Ttub), LINKS.Attributes$Xet5))) {
        tgs.append(SPropertyOperations.getString(SLinkOperations.getTarget(((SNode) attr), LINKS.attribute$4Gbd), PROPS.name$MnvL));
        tgs.append(" : ");
        tgs.append(SPropertyOperations.getString(SLinkOperations.getTarget(SLinkOperations.getTarget(((SNode) attr), LINKS.attribute$4Gbd), LINKS.Type$dLI0), PROPS.name$MnvL));
        tgs.newLine();
      }
      tgs.append("}");
      tgs.newLine();
      tgs.newLine();
    }

    if (SLinkOperations.getTarget(ctx.getPrimaryInput(), LINKS.Reviews$AURJ) != null) {
      tgs.append("class ");
      tgs.append(SPropertyOperations.getString(SLinkOperations.getTarget(ctx.getPrimaryInput(), LINKS.Reviews$AURJ), PROPS.name$MnvL));
      tgs.append("{");
      tgs.newLine();
      for (SNode attr : ListSequence.fromList(SLinkOperations.getChildren(SLinkOperations.getTarget(ctx.getPrimaryInput(), LINKS.Comments$Ttub), LINKS.Attributes$Xet5))) {
        tgs.append(SPropertyOperations.getString(SLinkOperations.getTarget(((SNode) attr), LINKS.attribute$4Gbd), PROPS.name$MnvL));
        tgs.append(" : ");
        tgs.append(SPropertyOperations.getString(SLinkOperations.getTarget(SLinkOperations.getTarget(((SNode) attr), LINKS.attribute$4Gbd), LINKS.Type$dLI0), PROPS.name$MnvL));
        tgs.newLine();
      }
      tgs.append("}");
      tgs.newLine();
      tgs.newLine();
    }

    for (SNode approvalProc : ListSequence.fromList(SLinkOperations.getChildren(ctx.getPrimaryInput(), LINKS.ApprovalProcesses$T6Gz))) {
      tgs.append("class ");
      tgs.append(SPropertyOperations.getString(approvalProc, PROPS.name$MnvL));
      tgs.append("{");
      tgs.newLine();
      for (SNode attr : ListSequence.fromList(SLinkOperations.getChildren(approvalProc, LINKS.attributes$D1oN))) {
        tgs.append(SPropertyOperations.getString(SLinkOperations.getTarget(((SNode) attr), LINKS.attribute$4Gbd), PROPS.name$MnvL));
        tgs.append(" : ");
        tgs.append(SPropertyOperations.getString(SLinkOperations.getTarget(SLinkOperations.getTarget(((SNode) attr), LINKS.attribute$4Gbd), LINKS.Type$dLI0), PROPS.name$MnvL));
        tgs.newLine();
      }
      tgs.append("}");
      tgs.newLine();
      tgs.newLine();


      for (SNode approvalStep : ListSequence.fromList(SLinkOperations.getChildren(approvalProc, LINKS.steps$raPq))) {
        tgs.append("class ");
        tgs.append(SPropertyOperations.getString(approvalStep, PROPS.name$MnvL));
        tgs.append("{");
        tgs.newLine();
        for (SNode attr : ListSequence.fromList(SLinkOperations.getChildren(approvalStep, LINKS.attributes$MttQ))) {
          tgs.append(SPropertyOperations.getString(SLinkOperations.getTarget(((SNode) attr), LINKS.attribute$4Gbd), PROPS.name$MnvL));
          tgs.append(" : ");
          tgs.append(SPropertyOperations.getString(SLinkOperations.getTarget(SLinkOperations.getTarget(((SNode) attr), LINKS.attribute$4Gbd), LINKS.Type$dLI0), PROPS.name$MnvL));
          tgs.newLine();
        }
        tgs.append("}");
        tgs.newLine();
        tgs.newLine();

      }

      for (SNode approvalOutcome : ListSequence.fromList(SLinkOperations.getChildren(approvalProc, LINKS.outcomes$vn0h))) {
      }

    }
    // Cardinality 

    for (SNode item : ListSequence.fromList(SLinkOperations.getChildren(ctx.getPrimaryInput(), LINKS.Items$1KB3))) {
      if (SLinkOperations.getTarget(item, LINKS.comment$Enjq) != null) {
        tgs.append(SPropertyOperations.getString(item, PROPS.name$MnvL));
        tgs.append(" \"1\" -- \"*\" ");
        tgs.append(SPropertyOperations.getString(SLinkOperations.getTarget(item, LINKS.comment$Enjq), PROPS.name$MnvL));
        tgs.newLine();

      }
      if (SLinkOperations.getTarget(item, LINKS.rate$Eo0t) != null) {
        tgs.append(SPropertyOperations.getString(item, PROPS.name$MnvL));
        tgs.append(" \"1\" -- \"*\" ");
        tgs.append(SPropertyOperations.getString(SLinkOperations.getTarget(item, LINKS.rate$Eo0t), PROPS.name$MnvL));
        tgs.newLine();
      }
      tgs.newLine();
    }

    if (SLinkOperations.getTarget(ctx.getPrimaryInput(), LINKS.Comments$Ttub) != null) {
      tgs.append(SPropertyOperations.getString(SLinkOperations.getTarget(ctx.getPrimaryInput(), LINKS.Comments$Ttub), PROPS.name$MnvL));
      tgs.append(" \"*\" -- \"1\" ");
      tgs.append(SPropertyOperations.getString(SLinkOperations.getTarget(SLinkOperations.getTarget(ctx.getPrimaryInput(), LINKS.Comments$Ttub), LINKS.author$EM6g), PROPS.name$MnvL));
      tgs.append(" : \"Author\"");
      tgs.newLine();
    }

    if (SLinkOperations.getTarget(ctx.getPrimaryInput(), LINKS.Rates$Tz$_) != null) {
      tgs.append(SPropertyOperations.getString(SLinkOperations.getTarget(ctx.getPrimaryInput(), LINKS.Rates$Tz$_), PROPS.name$MnvL));
      tgs.append(" \"*\" -- \"1\" ");
      tgs.append(SPropertyOperations.getString(SLinkOperations.getTarget(SLinkOperations.getTarget(ctx.getPrimaryInput(), LINKS.Rates$Tz$_), LINKS.author$3bGH), PROPS.name$MnvL));
      tgs.append(" : \"Author\"");
      tgs.newLine();
      tgs.append(SPropertyOperations.getString(SLinkOperations.getTarget(ctx.getPrimaryInput(), LINKS.Rates$Tz$_), PROPS.name$MnvL));
      tgs.append(" \"1\" -- \"0..1\" ");
      tgs.append(SPropertyOperations.getString(SLinkOperations.getTarget(SLinkOperations.getTarget(ctx.getPrimaryInput(), LINKS.Rates$Tz$_), LINKS.review$3axC), PROPS.name$MnvL));
      tgs.append(" : \"has\"");
      tgs.newLine();
    }

    for (SNode approvalProc : ListSequence.fromList(SLinkOperations.getChildren(ctx.getPrimaryInput(), LINKS.ApprovalProcesses$T6Gz))) {
      for (SNode step : ListSequence.fromList(SLinkOperations.getChildren(approvalProc, LINKS.steps$raPq))) {
        tgs.append(SPropertyOperations.getString(approvalProc, PROPS.name$MnvL));
        tgs.append(" \"1\" -- \"1..*\" ");
        tgs.append(SPropertyOperations.getString(step, PROPS.name$MnvL));
        tgs.newLine();
        tgs.append(SPropertyOperations.getString(step, PROPS.name$MnvL));
        tgs.append(" \"*\" -- \"0..2\" ");
        tgs.append(SPropertyOperations.getString(step, PROPS.name$MnvL));
        tgs.newLine();
        for (SNode outcome : ListSequence.fromList(SLinkOperations.getChildren(approvalProc, LINKS.outcomes$vn0h))) {
        }
        for (SNode outcome : ListSequence.fromList(SLinkOperations.getChildren(approvalProc, LINKS.outcomes$vn0h))) {
        }
        if (SLinkOperations.getTarget(approvalProc, LINKS.review$jD9l) != null) {
          tgs.append(SPropertyOperations.getString(approvalProc, PROPS.name$MnvL));
          tgs.append(" \"1\" -- \"1\" ");
          tgs.append(SPropertyOperations.getString(SLinkOperations.getTarget(approvalProc, LINKS.review$jD9l), PROPS.name$MnvL));
          tgs.newLine();
        }
        if (SLinkOperations.getTarget(approvalProc, LINKS.comment$tZHt) != null) {
          tgs.append(SPropertyOperations.getString(approvalProc, PROPS.name$MnvL));
          tgs.append(" \"1\" -- \"1\" ");
          tgs.append(SPropertyOperations.getString(SLinkOperations.getTarget(approvalProc, LINKS.comment$tZHt), PROPS.name$MnvL));
          tgs.newLine();
        }
        if (SLinkOperations.getTarget(approvalProc, LINKS.rate$qH1r) != null) {
          tgs.append(SPropertyOperations.getString(approvalProc, PROPS.name$MnvL));
          tgs.append(" \"1\" -- \"1\" ");
          tgs.append(SPropertyOperations.getString(SLinkOperations.getTarget(approvalProc, LINKS.rate$qH1r), PROPS.name$MnvL));
          tgs.newLine();
        }
      }
    }

    tgs.append("\n@enduml");
  }

  private static final class PROPS {
    /*package*/ static final SProperty name$MnvL = MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name");
  }

  private static final class LINKS {
    /*package*/ static final SReferenceLink attribute$4Gbd = MetaAdapterFactory.getReferenceLink(0x6435327aad3b4146L, 0x871110b700cc9d08L, 0x59f01f74dd1d47b6L, 0x59f01f74dd1d8b3dL, "attribute");
    /*package*/ static final SContainmentLink Type$dLI0 = MetaAdapterFactory.getContainmentLink(0x6435327aad3b4146L, 0x871110b700cc9d08L, 0x1c3db74b8a49ed85L, 0x26e5e3033d0c217bL, "Type");
    /*package*/ static final SContainmentLink Attributes$DC3n = MetaAdapterFactory.getContainmentLink(0x6435327aad3b4146L, 0x871110b700cc9d08L, 0x1c3db74b8a494569L, 0x1c3db74b8a4bda55L, "Attributes");
    /*package*/ static final SContainmentLink Users$1K91 = MetaAdapterFactory.getContainmentLink(0x6435327aad3b4146L, 0x871110b700cc9d08L, 0x7ddb8f78027bf3ebL, 0x7ddb8f7802834182L, "Users");
    /*package*/ static final SContainmentLink Attributes$Vo_d = MetaAdapterFactory.getContainmentLink(0x6435327aad3b4146L, 0x871110b700cc9d08L, 0x1c3db74b8a4819cfL, 0x7ddb8f78027fed7bL, "Attributes");
    /*package*/ static final SContainmentLink Items$1KB3 = MetaAdapterFactory.getContainmentLink(0x6435327aad3b4146L, 0x871110b700cc9d08L, 0x7ddb8f78027bf3ebL, 0x7ddb8f7802834184L, "Items");
    /*package*/ static final SContainmentLink Rates$Tz$_ = MetaAdapterFactory.getContainmentLink(0x6435327aad3b4146L, 0x871110b700cc9d08L, 0x7ddb8f78027bf3ebL, 0x29ce136185ba52d0L, "Rates");
    /*package*/ static final SContainmentLink Attributes$Xkyx = MetaAdapterFactory.getContainmentLink(0x6435327aad3b4146L, 0x871110b700cc9d08L, 0x16a2996d8c70b82dL, 0x16a2996d8c70d9cbL, "Attributes");
    /*package*/ static final SContainmentLink Comments$Ttub = MetaAdapterFactory.getContainmentLink(0x6435327aad3b4146L, 0x871110b700cc9d08L, 0x7ddb8f78027bf3ebL, 0x29ce136185ba52cbL, "Comments");
    /*package*/ static final SContainmentLink Attributes$Xet5 = MetaAdapterFactory.getContainmentLink(0x6435327aad3b4146L, 0x871110b700cc9d08L, 0x16a2996d8c70b825L, 0x16a2996d8c70d9c7L, "Attributes");
    /*package*/ static final SContainmentLink Reviews$AURJ = MetaAdapterFactory.getContainmentLink(0x6435327aad3b4146L, 0x871110b700cc9d08L, 0x7ddb8f78027bf3ebL, 0x7ddb8f78028b51deL, "Reviews");
    /*package*/ static final SContainmentLink attributes$D1oN = MetaAdapterFactory.getContainmentLink(0x6435327aad3b4146L, 0x871110b700cc9d08L, 0x566dda0423a6b7d0L, 0x566dda0423f35534L, "attributes");
    /*package*/ static final SContainmentLink attributes$MttQ = MetaAdapterFactory.getContainmentLink(0x6435327aad3b4146L, 0x871110b700cc9d08L, 0x566dda0423a6bc6eL, 0x566dda0423bc1d60L, "attributes");
    /*package*/ static final SContainmentLink steps$raPq = MetaAdapterFactory.getContainmentLink(0x6435327aad3b4146L, 0x871110b700cc9d08L, 0x566dda0423a6b7d0L, 0x566dda0423a6be60L, "steps");
    /*package*/ static final SContainmentLink outcomes$vn0h = MetaAdapterFactory.getContainmentLink(0x6435327aad3b4146L, 0x871110b700cc9d08L, 0x566dda0423a6b7d0L, 0x566dda0423a6befcL, "outcomes");
    /*package*/ static final SContainmentLink ApprovalProcesses$T6Gz = MetaAdapterFactory.getContainmentLink(0x6435327aad3b4146L, 0x871110b700cc9d08L, 0x7ddb8f78027bf3ebL, 0x566dda0423a6c06eL, "ApprovalProcesses");
    /*package*/ static final SReferenceLink comment$Enjq = MetaAdapterFactory.getReferenceLink(0x6435327aad3b4146L, 0x871110b700cc9d08L, 0x1c3db74b8a4819cfL, 0x59f01f74dd4355efL, "comment");
    /*package*/ static final SReferenceLink rate$Eo0t = MetaAdapterFactory.getReferenceLink(0x6435327aad3b4146L, 0x871110b700cc9d08L, 0x1c3db74b8a4819cfL, 0x59f01f74dd4355f2L, "rate");
    /*package*/ static final SReferenceLink author$EM6g = MetaAdapterFactory.getReferenceLink(0x6435327aad3b4146L, 0x871110b700cc9d08L, 0x16a2996d8c70b825L, 0x20f7dd40e6ee2b68L, "author");
    /*package*/ static final SReferenceLink author$3bGH = MetaAdapterFactory.getReferenceLink(0x6435327aad3b4146L, 0x871110b700cc9d08L, 0x16a2996d8c70b82dL, 0x59f01f74dd4355fdL, "author");
    /*package*/ static final SReferenceLink review$3axC = MetaAdapterFactory.getReferenceLink(0x6435327aad3b4146L, 0x871110b700cc9d08L, 0x16a2996d8c70b82dL, 0x59f01f74dd4355f8L, "review");
    /*package*/ static final SReferenceLink review$jD9l = MetaAdapterFactory.getReferenceLink(0x6435327aad3b4146L, 0x871110b700cc9d08L, 0x566dda0423a6b7d0L, 0x566dda0423f77dd9L, "review");
    /*package*/ static final SReferenceLink comment$tZHt = MetaAdapterFactory.getReferenceLink(0x6435327aad3b4146L, 0x871110b700cc9d08L, 0x566dda0423a6b7d0L, 0x566dda0423f77ef4L, "comment");
    /*package*/ static final SReferenceLink rate$qH1r = MetaAdapterFactory.getReferenceLink(0x6435327aad3b4146L, 0x871110b700cc9d08L, 0x566dda0423a6b7d0L, 0x566dda0423f77ea5L, "rate");
  }
}
