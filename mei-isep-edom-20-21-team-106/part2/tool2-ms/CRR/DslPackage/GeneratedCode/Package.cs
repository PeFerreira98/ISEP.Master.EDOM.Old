//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Drawing.Design;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using System.Windows.Forms;
using VSShellInterop = global::Microsoft.VisualStudio.Shell.Interop;
using VSShell = global::Microsoft.VisualStudio.Shell;
using DslShell = global::Microsoft.VisualStudio.Modeling.Shell;
using DslDesign = global::Microsoft.VisualStudio.Modeling.Design;
using DslModeling = global::Microsoft.VisualStudio.Modeling;

namespace Edom.CRR
{
	/// <summary>
	/// This class implements the VS package that integrates this DSL into Visual Studio.
	/// </summary>
	[VSShell::PackageRegistration(RegisterUsing = VSShell::RegistrationMethod.Assembly, UseManagedResourcesOnly = true, AllowsBackgroundLoading = true)]
	[VSShell::ProvideToolWindow(typeof(CRRExplorerToolWindow), MultiInstances = false, Style = VSShell::VsDockStyle.Tabbed, Orientation = VSShell::ToolWindowOrientation.Right, Window = "{3AE79031-E1BC-11D0-8F78-00A0C9110057}")]
	[VSShell::ProvideToolWindowVisibility(typeof(CRRExplorerToolWindow), Constants.CRREditorFactoryId)]
	[VSShell::ProvideStaticToolboxGroup("@CRRToolboxTab;Edom.CRR.Dsl.dll", "Edom.CRR.CRRToolboxTab")]
	[VSShell::ProvideStaticToolboxItem("Edom.CRR.CRRToolboxTab",
					"@UserToolboxItem;Edom.CRR.Dsl.dll", 
					"Edom.CRR.UserToolboxItem", 
					"CF_TOOLBOXITEMCONTAINER,CF_TOOLBOXITEMCONTAINER_HASH,CF_TOOLBOXITEMCONTAINER_CONTENTS", 
					"User", 
					"@UserToolboxBitmap;Edom.CRR.Dsl.dll", 
					0xff00ff,
					Index = 0)]
	[VSShell::ProvideStaticToolboxItem("Edom.CRR.CRRToolboxTab",
					"@ItemHasAttributeToolboxItem;Edom.CRR.Dsl.dll", 
					"Edom.CRR.ItemHasAttributeToolboxItem", 
					"CF_TOOLBOXITEMCONTAINER,CF_TOOLBOXITEMCONTAINER_HASH,CF_TOOLBOXITEMCONTAINER_CONTENTS", 
					"ItemHasAttribute", 
					"@ItemHasAttributeToolboxBitmap;Edom.CRR.Dsl.dll", 
					0xff00ff,
					Index = 1)]
	[VSShell::ProvideStaticToolboxItem("Edom.CRR.CRRToolboxTab",
					"@ItemToolboxItem;Edom.CRR.Dsl.dll", 
					"Edom.CRR.ItemToolboxItem", 
					"CF_TOOLBOXITEMCONTAINER,CF_TOOLBOXITEMCONTAINER_HASH,CF_TOOLBOXITEMCONTAINER_CONTENTS", 
					"Item", 
					"@ItemToolboxBitmap;Edom.CRR.Dsl.dll", 
					0xff00ff,
					Index = 2)]
	[VSShell::ProvideStaticToolboxItem("Edom.CRR.CRRToolboxTab",
					"@AttributeToolboxItem;Edom.CRR.Dsl.dll", 
					"Edom.CRR.AttributeToolboxItem", 
					"CF_TOOLBOXITEMCONTAINER,CF_TOOLBOXITEMCONTAINER_HASH,CF_TOOLBOXITEMCONTAINER_CONTENTS", 
					"Attribute", 
					"@AttributeToolboxBitmap;Edom.CRR.Dsl.dll", 
					0xff00ff,
					Index = 3)]
	[VSShell::ProvideStaticToolboxItem("Edom.CRR.CRRToolboxTab",
					"@CommentToolboxItem;Edom.CRR.Dsl.dll", 
					"Edom.CRR.CommentToolboxItem", 
					"CF_TOOLBOXITEMCONTAINER,CF_TOOLBOXITEMCONTAINER_HASH,CF_TOOLBOXITEMCONTAINER_CONTENTS", 
					"Comment", 
					"@CommentToolboxBitmap;Edom.CRR.Dsl.dll", 
					0xff00ff,
					Index = 4)]
	[VSShell::ProvideStaticToolboxItem("Edom.CRR.CRRToolboxTab",
					"@DataTypeToolboxItem;Edom.CRR.Dsl.dll", 
					"Edom.CRR.DataTypeToolboxItem", 
					"CF_TOOLBOXITEMCONTAINER,CF_TOOLBOXITEMCONTAINER_HASH,CF_TOOLBOXITEMCONTAINER_CONTENTS", 
					"DataType", 
					"@DataTypeToolboxBitmap;Edom.CRR.Dsl.dll", 
					0xff00ff,
					Index = 5)]
	[VSShell::ProvideStaticToolboxItem("Edom.CRR.CRRToolboxTab",
					"@AttributeHasDataTypeToolboxItem;Edom.CRR.Dsl.dll", 
					"Edom.CRR.AttributeHasDataTypeToolboxItem", 
					"CF_TOOLBOXITEMCONTAINER,CF_TOOLBOXITEMCONTAINER_HASH,CF_TOOLBOXITEMCONTAINER_CONTENTS", 
					"AttributeHasDataType", 
					"@AttributeHasDataTypeToolboxBitmap;Edom.CRR.Dsl.dll", 
					0xff00ff,
					Index = 6)]
	[VSShell::ProvideStaticToolboxItem("Edom.CRR.CRRToolboxTab",
					"@UserHasAttributeToolboxItem;Edom.CRR.Dsl.dll", 
					"Edom.CRR.UserHasAttributeToolboxItem", 
					"CF_TOOLBOXITEMCONTAINER,CF_TOOLBOXITEMCONTAINER_HASH,CF_TOOLBOXITEMCONTAINER_CONTENTS", 
					"UserHasAttribute", 
					"@UserHasAttributeToolboxBitmap;Edom.CRR.Dsl.dll", 
					0xff00ff,
					Index = 7)]
	[VSShell::ProvideStaticToolboxItem("Edom.CRR.CRRToolboxTab",
					"@CommentHasAttributeToolboxItem;Edom.CRR.Dsl.dll", 
					"Edom.CRR.CommentHasAttributeToolboxItem", 
					"CF_TOOLBOXITEMCONTAINER,CF_TOOLBOXITEMCONTAINER_HASH,CF_TOOLBOXITEMCONTAINER_CONTENTS", 
					"CommentHasAttribute", 
					"@CommentHasAttributeToolboxBitmap;Edom.CRR.Dsl.dll", 
					0xff00ff,
					Index = 8)]
	[VSShell::ProvideStaticToolboxItem("Edom.CRR.CRRToolboxTab",
					"@ItemHasCommentToolboxItem;Edom.CRR.Dsl.dll", 
					"Edom.CRR.ItemHasCommentToolboxItem", 
					"CF_TOOLBOXITEMCONTAINER,CF_TOOLBOXITEMCONTAINER_HASH,CF_TOOLBOXITEMCONTAINER_CONTENTS", 
					"ItemHasComment", 
					"@ItemHasCommentToolboxBitmap;Edom.CRR.Dsl.dll", 
					0xff00ff,
					Index = 9)]
	[VSShell::ProvideStaticToolboxItem("Edom.CRR.CRRToolboxTab",
					"@RateToolboxItem;Edom.CRR.Dsl.dll", 
					"Edom.CRR.RateToolboxItem", 
					"CF_TOOLBOXITEMCONTAINER,CF_TOOLBOXITEMCONTAINER_HASH,CF_TOOLBOXITEMCONTAINER_CONTENTS", 
					"Rate", 
					"@RateToolboxBitmap;Edom.CRR.Dsl.dll", 
					0xff00ff,
					Index = 10)]
	[VSShell::ProvideStaticToolboxItem("Edom.CRR.CRRToolboxTab",
					"@RateHasAttributesToolboxItem;Edom.CRR.Dsl.dll", 
					"Edom.CRR.RateHasAttributesToolboxItem", 
					"CF_TOOLBOXITEMCONTAINER,CF_TOOLBOXITEMCONTAINER_HASH,CF_TOOLBOXITEMCONTAINER_CONTENTS", 
					"RateHasAttributes", 
					"@RateHasAttributesToolboxBitmap;Edom.CRR.Dsl.dll", 
					0xff00ff,
					Index = 11)]
	[VSShell::ProvideStaticToolboxItem("Edom.CRR.CRRToolboxTab",
					"@ItemHasRateToolboxItem;Edom.CRR.Dsl.dll", 
					"Edom.CRR.ItemHasRateToolboxItem", 
					"CF_TOOLBOXITEMCONTAINER,CF_TOOLBOXITEMCONTAINER_HASH,CF_TOOLBOXITEMCONTAINER_CONTENTS", 
					"ItemHasRate", 
					"@ItemHasRateToolboxBitmap;Edom.CRR.Dsl.dll", 
					0xff00ff,
					Index = 12)]
	[VSShell::ProvideStaticToolboxItem("Edom.CRR.CRRToolboxTab",
					"@ReviewToolboxItem;Edom.CRR.Dsl.dll", 
					"Edom.CRR.ReviewToolboxItem", 
					"CF_TOOLBOXITEMCONTAINER,CF_TOOLBOXITEMCONTAINER_HASH,CF_TOOLBOXITEMCONTAINER_CONTENTS", 
					"Review", 
					"@ReviewToolboxBitmap;Edom.CRR.Dsl.dll", 
					0xff00ff,
					Index = 13)]
	[VSShell::ProvideStaticToolboxItem("Edom.CRR.CRRToolboxTab",
					"@RateHasReviewToolboxItem;Edom.CRR.Dsl.dll", 
					"Edom.CRR.RateHasReviewToolboxItem", 
					"CF_TOOLBOXITEMCONTAINER,CF_TOOLBOXITEMCONTAINER_HASH,CF_TOOLBOXITEMCONTAINER_CONTENTS", 
					"RateHasReview", 
					"@RateHasReviewToolboxBitmap;Edom.CRR.Dsl.dll", 
					0xff00ff,
					Index = 14)]
	[VSShell::ProvideStaticToolboxItem("Edom.CRR.CRRToolboxTab",
					"@RateHasUserToolboxItem;Edom.CRR.Dsl.dll", 
					"Edom.CRR.RateHasUserToolboxItem", 
					"CF_TOOLBOXITEMCONTAINER,CF_TOOLBOXITEMCONTAINER_HASH,CF_TOOLBOXITEMCONTAINER_CONTENTS", 
					"RateHasUser", 
					"@RateHasUserToolboxBitmap;Edom.CRR.Dsl.dll", 
					0xff00ff,
					Index = 15)]
	[VSShell::ProvideStaticToolboxItem("Edom.CRR.CRRToolboxTab",
					"@CommentHasUserToolboxItem;Edom.CRR.Dsl.dll", 
					"Edom.CRR.CommentHasUserToolboxItem", 
					"CF_TOOLBOXITEMCONTAINER,CF_TOOLBOXITEMCONTAINER_HASH,CF_TOOLBOXITEMCONTAINER_CONTENTS", 
					"CommentHasUser", 
					"@CommentHasUserToolboxBitmap;Edom.CRR.Dsl.dll", 
					0xff00ff,
					Index = 16)]
	[VSShell::ProvideStaticToolboxItem("Edom.CRR.CRRToolboxTab",
					"@ReviewHasAttributesToolboxItem;Edom.CRR.Dsl.dll", 
					"Edom.CRR.ReviewHasAttributesToolboxItem", 
					"CF_TOOLBOXITEMCONTAINER,CF_TOOLBOXITEMCONTAINER_HASH,CF_TOOLBOXITEMCONTAINER_CONTENTS", 
					"ReviewHasAttributes", 
					"@ReviewHasAttributesToolboxBitmap;Edom.CRR.Dsl.dll", 
					0xff00ff,
					Index = 17)]
	[VSShell::ProvideStaticToolboxItem("Edom.CRR.CRRToolboxTab",
					"@ApprovalProcessToolboxItem;Edom.CRR.Dsl.dll", 
					"Edom.CRR.ApprovalProcessToolboxItem", 
					"CF_TOOLBOXITEMCONTAINER,CF_TOOLBOXITEMCONTAINER_HASH,CF_TOOLBOXITEMCONTAINER_CONTENTS", 
					"ApprovalProcess", 
					"@ApprovalProcessToolboxBitmap;Edom.CRR.Dsl.dll", 
					0xff00ff,
					Index = 18)]
	[VSShell::ProvideStaticToolboxItem("Edom.CRR.CRRToolboxTab",
					"@ApprovalStartToolboxItem;Edom.CRR.Dsl.dll", 
					"Edom.CRR.ApprovalStartToolboxItem", 
					"CF_TOOLBOXITEMCONTAINER,CF_TOOLBOXITEMCONTAINER_HASH,CF_TOOLBOXITEMCONTAINER_CONTENTS", 
					"ApprovalStart", 
					"@ApprovalStartToolboxBitmap;Edom.CRR.Dsl.dll", 
					0xff00ff,
					Index = 19)]
	[VSShell::ProvideStaticToolboxItem("Edom.CRR.CRRToolboxTab",
					"@ApprovalStepToolboxItem;Edom.CRR.Dsl.dll", 
					"Edom.CRR.ApprovalStepToolboxItem", 
					"CF_TOOLBOXITEMCONTAINER,CF_TOOLBOXITEMCONTAINER_HASH,CF_TOOLBOXITEMCONTAINER_CONTENTS", 
					"ApprovalStep", 
					"@ApprovalStepToolboxBitmap;Edom.CRR.Dsl.dll", 
					0xff00ff,
					Index = 20)]
	[VSShell::ProvideStaticToolboxItem("Edom.CRR.CRRToolboxTab",
					"@ApprovalStartHasStepToolboxItem;Edom.CRR.Dsl.dll", 
					"Edom.CRR.ApprovalStartHasStepToolboxItem", 
					"CF_TOOLBOXITEMCONTAINER,CF_TOOLBOXITEMCONTAINER_HASH,CF_TOOLBOXITEMCONTAINER_CONTENTS", 
					"ApprovalStartHasStep", 
					"@ApprovalStartHasStepToolboxBitmap;Edom.CRR.Dsl.dll", 
					0xff00ff,
					Index = 21)]
	[VSShell::ProvideStaticToolboxItem("Edom.CRR.CRRToolboxTab",
					"@CommentHasApprovalProcessToolboxItem;Edom.CRR.Dsl.dll", 
					"Edom.CRR.CommentHasApprovalProcessToolboxItem", 
					"CF_TOOLBOXITEMCONTAINER,CF_TOOLBOXITEMCONTAINER_HASH,CF_TOOLBOXITEMCONTAINER_CONTENTS", 
					"CommentHasApprovalProcess", 
					"@CommentHasApprovalProcessToolboxBitmap;Edom.CRR.Dsl.dll", 
					0xff00ff,
					Index = 22)]
	[VSShell::ProvideStaticToolboxItem("Edom.CRR.CRRToolboxTab",
					"@ReviewHasApprovalProcessToolboxItem;Edom.CRR.Dsl.dll", 
					"Edom.CRR.ReviewHasApprovalProcessToolboxItem", 
					"CF_TOOLBOXITEMCONTAINER,CF_TOOLBOXITEMCONTAINER_HASH,CF_TOOLBOXITEMCONTAINER_CONTENTS", 
					"ReviewHasApprovalProcess", 
					"@ReviewHasApprovalProcessToolboxBitmap;Edom.CRR.Dsl.dll", 
					0xff00ff,
					Index = 23)]
	[VSShell::ProvideStaticToolboxItem("Edom.CRR.CRRToolboxTab",
					"@RateHasApprovalProcessToolboxItem;Edom.CRR.Dsl.dll", 
					"Edom.CRR.RateHasApprovalProcessToolboxItem", 
					"CF_TOOLBOXITEMCONTAINER,CF_TOOLBOXITEMCONTAINER_HASH,CF_TOOLBOXITEMCONTAINER_CONTENTS", 
					"RateHasApprovalProcess", 
					"@RateHasApprovalProcessToolboxBitmap;Edom.CRR.Dsl.dll", 
					0xff00ff,
					Index = 24)]
	[VSShell::ProvideStaticToolboxItem("Edom.CRR.CRRToolboxTab",
					"@ApprovalStepHasSuccessStepToolboxItem;Edom.CRR.Dsl.dll", 
					"Edom.CRR.ApprovalStepHasSuccessStepToolboxItem", 
					"CF_TOOLBOXITEMCONTAINER,CF_TOOLBOXITEMCONTAINER_HASH,CF_TOOLBOXITEMCONTAINER_CONTENTS", 
					"ApprovalStepHasSuccessStep", 
					"@ApprovalStepHasSuccessStepToolboxBitmap;Edom.CRR.Dsl.dll", 
					0xff00ff,
					Index = 25)]
	[VSShell::ProvideStaticToolboxItem("Edom.CRR.CRRToolboxTab",
					"@ApprovalStepHasFailureStepToolboxItem;Edom.CRR.Dsl.dll", 
					"Edom.CRR.ApprovalStepHasFailureStepToolboxItem", 
					"CF_TOOLBOXITEMCONTAINER,CF_TOOLBOXITEMCONTAINER_HASH,CF_TOOLBOXITEMCONTAINER_CONTENTS", 
					"ApprovalStepHasFailureStep", 
					"@ApprovalStepHasFailureStepToolboxBitmap;Edom.CRR.Dsl.dll", 
					0xff00ff,
					Index = 26)]
	[VSShell::ProvideEditorFactory(typeof(CRREditorFactory), 103, TrustLevel = VSShellInterop::__VSEDITORTRUSTLEVEL.ETL_AlwaysTrusted)]
	[VSShell::ProvideEditorExtension(typeof(CRREditorFactory), "." + Constants.DesignerFileExtension, 50)]
	[VSShell::ProvideEditorLogicalView(typeof(CRREditorFactory), "{7651A702-06E5-11D1-8EBD-00A0C90F26EA}")] // Designer logical view GUID i.e. VSConstants.LOGVIEWID_Designer
	[DslShell::ProvideRelatedFile("." + Constants.DesignerFileExtension, Constants.DefaultDiagramExtension,
		ProjectSystem = DslShell::ProvideRelatedFileAttribute.CSharpProjectGuid,
		FileOptions = DslShell::RelatedFileType.FileName)]
	[DslShell::ProvideRelatedFile("." + Constants.DesignerFileExtension, Constants.DefaultDiagramExtension,
		ProjectSystem = DslShell::ProvideRelatedFileAttribute.VisualBasicProjectGuid,
		FileOptions = DslShell::RelatedFileType.FileName)]
	[DslShell::RegisterAsDslToolsEditor]
	[global::System.Runtime.InteropServices.ComVisible(true)]
	[DslShell::ProvideBindingPath]
	[DslShell::ProvideXmlEditorChooserBlockSxSWithXmlEditor(@"CRR", typeof(CRREditorFactory))]

	internal abstract partial class CRRPackageBase : DslShell::AsyncModelingPackage
	{
		protected global::Edom.CRR.CRRToolboxHelper toolboxHelper;	
		
		/// <summary>
		/// Initialization method called by the package base class when this package is loaded.
		/// </summary>
		protected async override Task InitializeAsync(CancellationToken cancellationToken, IProgress<VSShell.ServiceProgressData> progress)
		{
			await base.InitializeAsync(cancellationToken, progress);

			// Register the editor factory used to create the DSL editor.
			this.RegisterEditorFactory(new CRREditorFactory(this));
			
			// Initialize the toolbox helper
			toolboxHelper = new global::Edom.CRR.CRRToolboxHelper(this);

			// Create the command set that handles menu commands provided by this package.
			CRRCommandSet commandSet = new CRRCommandSet(this);
			await commandSet.InitializeAsync(cancellationToken);
			
			// Create the command set that handles cut/copy/paste commands provided by this package.
			CRRClipboardCommandSet clipboardCommandSet = new CRRClipboardCommandSet(this);
			await clipboardCommandSet.InitializeAsync(cancellationToken);
			
			// Register the model explorer tool window for this DSL.
			this.AddToolWindow(typeof(CRRExplorerToolWindow));

			if (cancellationToken.IsCancellationRequested)
			{
				return;
			}

			await JoinableTaskFactory.SwitchToMainThreadAsync();

			// Initialize Extension Registars
			// this is a partial method call
			this.InitializeExtensions();

			// Add dynamic toolbox items
			await this.SetupDynamicToolboxAsync(cancellationToken);
		}

		/// <summary>
		/// Partial method to initialize ExtensionRegistrars (if any) in the DslPackage
		/// </summary>
		partial void InitializeExtensions();
		
		/// <summary>
		/// Returns any dynamic tool items for the designer
		/// </summary>
		/// <remarks>The default implementation is to return the list of items from the generated toolbox helper.</remarks>
		protected override global::System.Collections.Generic.IList<DslDesign::ModelingToolboxItem> CreateToolboxItems()
		{
			try
			{
				Debug.Assert(toolboxHelper != null, "Toolbox helper is not initialized");
				return toolboxHelper.CreateToolboxItems();
			}
			catch (global::System.Exception e)
			{
				global::System.Diagnostics.Debug.Fail("Exception thrown during toolbox item creation.  This may result in Package Load Failure:\r\n\r\n" + e);
				throw;
			}
		}
		
		
		/// <summary>
		/// Given a toolbox item "unique ID" and a data format identifier, returns the content of
		/// the data format. 
		/// </summary>
		/// <param name="itemId">The unique ToolboxItem to retrieve data for</param>
		/// <param name="format">The desired format of the resulting data</param>
		protected override object GetToolboxItemData(string itemId, DataFormats.Format format)
		{
			Debug.Assert(toolboxHelper != null, "Toolbox helper is not initialized");
		
			// Retrieve the specified ToolboxItem from the DSL
			return toolboxHelper.GetToolboxItemData(itemId, format);
		}

		public override VSShellInterop::IVsAsyncToolWindowFactory GetAsyncToolWindowFactory(Guid toolWindowType)
		{
			if (toolWindowType == typeof(CRRExplorerToolWindow).GUID)
			{
				return this;
			}

			return base.GetAsyncToolWindowFactory(toolWindowType);
		}
	}
}

//
// Package attributes which may need to change are placed on the partial class below, rather than in the main include file.
//
namespace Edom.CRR
{
	/// <summary>
	/// Double-derived class to allow easier code customization.
	/// </summary>
	[VSShell::ProvideMenuResource("1000.ctmenu", 1)]
	[VSShell::ProvideToolboxItems(1)]
	[global::Microsoft.VisualStudio.TextTemplating.VSHost.ProvideDirectiveProcessor(typeof(global::Edom.CRR.CRRDirectiveProcessor), global::Edom.CRR.CRRDirectiveProcessor.CRRDirectiveProcessorName, "A directive processor that provides access to CRR files")]
	[global::System.Runtime.InteropServices.Guid(Constants.CRRPackageId)]
	internal sealed partial class CRRPackage : CRRPackageBase
	{
	}
}