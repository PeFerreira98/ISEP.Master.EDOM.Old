//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using DslModeling = global::Microsoft.VisualStudio.Modeling;
using DslDesign = global::Microsoft.VisualStudio.Modeling.Design;
using System;
using System.Diagnostics;
using System.Drawing.Design;
using System.Windows.Forms;
using DslDiagrams = global::Microsoft.VisualStudio.Modeling.Diagrams;

namespace Edom.CRR
{
	/// <summary>
	/// Helper class used to create and initialize toolbox items for this DSL.
	/// </summary>
	/// <remarks>
	/// Double-derived class to allow easier code customization.
	/// </remarks>
	public partial class CRRToolboxHelper : CRRToolboxHelperBase 
	{
		/// <summary>
		/// Constructs a new CRRToolboxHelper.
		/// </summary>
		public CRRToolboxHelper(global::System.IServiceProvider serviceProvider)
			: base(serviceProvider) { }
	}
	
	/// <summary>
	/// Helper class used to create and initialize toolbox items for this DSL.
	/// </summary>
	
	[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1001:TypesThatOwnDisposableFieldsShouldBeDisposable", Justification = "The store is disposed on domain shut down")]
	public abstract class CRRToolboxHelperBase
	{
		/// <summary>
		/// Toolbox item filter string used to identify CRR toolbox items.  
		/// </summary>
		/// <remarks>
		/// See the MSDN documentation for the ToolboxItemFilterAttribute class for more information on toolbox
		/// item filters.
		/// </remarks>
		public const string ToolboxFilterString = "CRR.1.0";
		/// <summary>
		/// Toolbox item filter string used to identify ItemHasAttribute connector tool.
		/// </summary>
		public const string ItemHasAttributeFilterString = "ItemHasAttribute.1.0";
		/// <summary>
		/// Toolbox item filter string used to identify AttributeHasDataType connector tool.
		/// </summary>
		public const string AttributeHasDataTypeFilterString = "AttributeHasDataType.1.0";
		/// <summary>
		/// Toolbox item filter string used to identify UserHasAttribute connector tool.
		/// </summary>
		public const string UserHasAttributeFilterString = "UserHasAttribute.1.0";
		/// <summary>
		/// Toolbox item filter string used to identify CommentHasAttribute connector tool.
		/// </summary>
		public const string CommentHasAttributeFilterString = "CommentHasAttribute.1.0";
		/// <summary>
		/// Toolbox item filter string used to identify ItemHasComment connector tool.
		/// </summary>
		public const string ItemHasCommentFilterString = "ItemHasComment.1.0";
		/// <summary>
		/// Toolbox item filter string used to identify RateHasAttributes connector tool.
		/// </summary>
		public const string RateHasAttributesFilterString = "RateHasAttributes.1.0";
		/// <summary>
		/// Toolbox item filter string used to identify ItemHasRate connector tool.
		/// </summary>
		public const string ItemHasRateFilterString = "ItemHasRate.1.0";
		/// <summary>
		/// Toolbox item filter string used to identify RateHasReview connector tool.
		/// </summary>
		public const string RateHasReviewFilterString = "RateHasReview.1.0";
		/// <summary>
		/// Toolbox item filter string used to identify RateHasUser connector tool.
		/// </summary>
		public const string RateHasUserFilterString = "RateHasUser.1.0";
		/// <summary>
		/// Toolbox item filter string used to identify CommentHasUser connector tool.
		/// </summary>
		public const string CommentHasUserFilterString = "CommentHasUser.1.0";
		/// <summary>
		/// Toolbox item filter string used to identify ReviewHasAttributes connector tool.
		/// </summary>
		public const string ReviewHasAttributesFilterString = "ReviewHasAttributes.1.0";
		/// <summary>
		/// Toolbox item filter string used to identify ApprovalProcessHasAttributes connector tool.
		/// </summary>
		public const string ApprovalProcessHasAttributesFilterString = "ApprovalProcessHasAttributes.1.0";
		/// <summary>
		/// Toolbox item filter string used to identify ApprovalStepHasOutcome connector tool.
		/// </summary>
		public const string ApprovalStepHasOutcomeFilterString = "ApprovalStepHasOutcome.1.0";
		/// <summary>
		/// Toolbox item filter string used to identify ApprovalStepHasAttributes connector tool.
		/// </summary>
		public const string ApprovalStepHasAttributesFilterString = "ApprovalStepHasAttributes.1.0";
		/// <summary>
		/// Toolbox item filter string used to identify ApprovalStepHasNextStep connector tool.
		/// </summary>
		public const string ApprovalStepHasNextStepFilterString = "ApprovalStepHasNextStep.1.0";
		/// <summary>
		/// Toolbox item filter string used to identify ApprovalStartHasStep connector tool.
		/// </summary>
		public const string ApprovalStartHasStepFilterString = "ApprovalStartHasStep.1.0";
		/// <summary>
		/// Toolbox item filter string used to identify CommentHasApprovalProcess connector tool.
		/// </summary>
		public const string CommentHasApprovalProcessFilterString = "CommentHasApprovalProcess.1.0";
		/// <summary>
		/// Toolbox item filter string used to identify ReviewHasApprovalProcess connector tool.
		/// </summary>
		public const string ReviewHasApprovalProcessFilterString = "ReviewHasApprovalProcess.1.0";
		/// <summary>
		/// Toolbox item filter string used to identify RateHasApprovalProcess connector tool.
		/// </summary>
		public const string RateHasApprovalProcessFilterString = "RateHasApprovalProcess.1.0";

	
		private global::System.Collections.Generic.Dictionary<string, DslDesign::ModelingToolboxItem> toolboxItemCache = new global::System.Collections.Generic.Dictionary<string, DslDesign::ModelingToolboxItem>();
		private DslModeling::Store toolboxStore;
		
		private global::System.IServiceProvider sp;
		
		/// <summary>
		/// Constructs a new CRRToolboxHelperBase.
		/// </summary>
		protected CRRToolboxHelperBase(global::System.IServiceProvider serviceProvider)
		{
			if(serviceProvider == null) throw new global::System.ArgumentNullException("serviceProvider");
			
			this.sp = serviceProvider;
		}
		
		/// <summary>
		/// Serivce provider used to access services from the hosting environment.
		/// </summary>
		protected global::System.IServiceProvider ServiceProvider
		{
			get
			{
				return this.sp;
			}
		}

		/// <summary>
		/// Returns the display name of the tab that should be opened by default when the editor is opened.
		/// </summary>
		public static string DefaultToolboxTabName
		{
			get
			{
				return global::Edom.CRR.CRRDomainModel.SingletonResourceManager.GetString("CRRToolboxTab", global::System.Globalization.CultureInfo.CurrentUICulture);
			}
		}
		
		
		/// <summary>
		/// Returns the toolbox items count in the default tool box tab.
		/// </summary>
		public static int DefaultToolboxTabToolboxItemsCount
		{
			get
			{
				return 30;
			}
		}
		

		/// <summary>
		/// Returns a list of custom toolbox items to be added dynamically
		/// </summary>
		public virtual global::System.Collections.Generic.IList<DslDesign::ModelingToolboxItem> CreateToolboxItems()
		{
			global::System.Collections.Generic.List<DslDesign::ModelingToolboxItem> toolboxItems = new global::System.Collections.Generic.List<DslDesign::ModelingToolboxItem>();
			return toolboxItems;
		}
		
		/// <summary>
		/// Creates an ElementGroupPrototype for the element tool corresponding to the given domain class id.
		/// Default behavior is to create a prototype containing an instance of the domain class.
		/// Derived classes may override this to add additional information to the prototype.
		/// </summary>
		protected virtual DslModeling::ElementGroupPrototype CreateElementToolPrototype(DslModeling::Store store, global::System.Guid domainClassId)
		{
			DslModeling::ModelElement element = store.ElementFactory.CreateElement(domainClassId);
			DslModeling::ElementGroup elementGroup = new DslModeling::ElementGroup(store.DefaultPartition);
			elementGroup.AddGraph(element, true);
			return elementGroup.CreatePrototype();
		}

		/// <summary>
		/// Returns instance of ModelingToolboxItem based on specified name.
		/// This method must be called from within a Transaction. Failure to do so will result in an exception
		/// </summary>
		/// <param name="itemId">unique name of desired ToolboxItem</param>
		/// <param name="store">Store to perform the operation against</param>
		/// <returns>An instance of ModelingToolboxItem if the itemId can be resolved, null otherwise</returns>
		public virtual DslDesign::ModelingToolboxItem GetToolboxItem(string itemId, DslModeling::Store store)
		{
			DslDesign::ModelingToolboxItem result = null;
			if (string.IsNullOrEmpty(itemId))
			{
				return null;
			}
			if (store == null)
			{
				return null;
			}
			global::System.Resources.ResourceManager resourceManager = global::Edom.CRR.CRRDomainModel.SingletonResourceManager;
			global::System.Globalization.CultureInfo resourceCulture = global::System.Globalization.CultureInfo.CurrentUICulture;
			switch(itemId)
			{
				case "Edom.CRR.UserToolboxItem":
					// Add User shape tool.
					result = new DslDesign::ModelingToolboxItem(
						"Edom.CRR.UserToolboxItem", // Unique identifier (non-localized) for the toolbox item.
						1, // Position relative to other items in the same toolbox tab.
						resourceManager.GetString("UserToolboxItem", resourceCulture), // Localized display name for the item.
						(global::System.Drawing.Bitmap)DslDiagrams::ImageHelper.GetImage(resourceManager.GetObject("UserToolboxBitmap", resourceCulture)), // Image displayed next to the toolbox item.
						"Edom.CRR.CRRToolboxTab", // Unique identifier (non-localized) for the toolbox item tab.
						resourceManager.GetString("CRRToolboxTab", resourceCulture), // Localized display name for the toolbox tab.
						"User", // F1 help keyword for the toolbox item.
						resourceManager.GetString("UserToolboxTooltip", resourceCulture), // Localized tooltip text for the toolbox item.
						CreateElementToolPrototype(store, global::Edom.CRR.User.DomainClassId), // ElementGroupPrototype (data object) representing model element on the toolbox.
						new global::System.ComponentModel.ToolboxItemFilterAttribute[] { // Collection of ToolboxItemFilterAttribute objects that determine visibility of the toolbox item.
						new global::System.ComponentModel.ToolboxItemFilterAttribute(ToolboxFilterString, global::System.ComponentModel.ToolboxItemFilterType.Require) 
						});
					break;
				case "Edom.CRR.ItemHasAttributeToolboxItem":

					// Add ItemHasAttribute connector tool.
					result = new DslDesign::ModelingToolboxItem(
						"Edom.CRR.ItemHasAttributeToolboxItem", // Unique identifier (non-localized) for the toolbox item.
						2, // Position relative to other items in the same toolbox tab.
						resourceManager.GetString("ItemHasAttributeToolboxItem", resourceCulture), // Localized display name for the item.
						(global::System.Drawing.Bitmap)DslDiagrams::ImageHelper.GetImage(resourceManager.GetObject("ItemHasAttributeToolboxBitmap", resourceCulture)), // Image displayed next to the toolbox item.				
						"Edom.CRR.CRRToolboxTab", // Unique identifier (non-localized) for the toolbox item tab.
						resourceManager.GetString("CRRToolboxTab", resourceCulture), // Localized display name for the toolbox tab.
						"ItemHasAttribute", // F1 help keyword for the toolbox item.
						resourceManager.GetString("ItemHasAttributeToolboxTooltip", resourceCulture), // Localized tooltip text for the toolbox item.
						null, // Connector toolbox items do not have an underlying data object.
						new global::System.ComponentModel.ToolboxItemFilterAttribute[] { // Collection of ToolboxItemFilterAttribute objects that determine visibility of the toolbox item.
							new global::System.ComponentModel.ToolboxItemFilterAttribute(ToolboxFilterString, global::System.ComponentModel.ToolboxItemFilterType.Require), 
							new global::System.ComponentModel.ToolboxItemFilterAttribute(ItemHasAttributeFilterString)
						});
					break;
				case "Edom.CRR.ItemToolboxItem":
					// Add Item shape tool.
					result = new DslDesign::ModelingToolboxItem(
						"Edom.CRR.ItemToolboxItem", // Unique identifier (non-localized) for the toolbox item.
						3, // Position relative to other items in the same toolbox tab.
						resourceManager.GetString("ItemToolboxItem", resourceCulture), // Localized display name for the item.
						(global::System.Drawing.Bitmap)DslDiagrams::ImageHelper.GetImage(resourceManager.GetObject("ItemToolboxBitmap", resourceCulture)), // Image displayed next to the toolbox item.
						"Edom.CRR.CRRToolboxTab", // Unique identifier (non-localized) for the toolbox item tab.
						resourceManager.GetString("CRRToolboxTab", resourceCulture), // Localized display name for the toolbox tab.
						"Item", // F1 help keyword for the toolbox item.
						resourceManager.GetString("ItemToolboxTooltip", resourceCulture), // Localized tooltip text for the toolbox item.
						CreateElementToolPrototype(store, global::Edom.CRR.Item.DomainClassId), // ElementGroupPrototype (data object) representing model element on the toolbox.
						new global::System.ComponentModel.ToolboxItemFilterAttribute[] { // Collection of ToolboxItemFilterAttribute objects that determine visibility of the toolbox item.
						new global::System.ComponentModel.ToolboxItemFilterAttribute(ToolboxFilterString, global::System.ComponentModel.ToolboxItemFilterType.Require) 
						});
					break;
				case "Edom.CRR.AttributeToolboxItem":
					// Add Attribute shape tool.
					result = new DslDesign::ModelingToolboxItem(
						"Edom.CRR.AttributeToolboxItem", // Unique identifier (non-localized) for the toolbox item.
						4, // Position relative to other items in the same toolbox tab.
						resourceManager.GetString("AttributeToolboxItem", resourceCulture), // Localized display name for the item.
						(global::System.Drawing.Bitmap)DslDiagrams::ImageHelper.GetImage(resourceManager.GetObject("AttributeToolboxBitmap", resourceCulture)), // Image displayed next to the toolbox item.
						"Edom.CRR.CRRToolboxTab", // Unique identifier (non-localized) for the toolbox item tab.
						resourceManager.GetString("CRRToolboxTab", resourceCulture), // Localized display name for the toolbox tab.
						"Attribute", // F1 help keyword for the toolbox item.
						resourceManager.GetString("AttributeToolboxTooltip", resourceCulture), // Localized tooltip text for the toolbox item.
						CreateElementToolPrototype(store, global::Edom.CRR.Attribute.DomainClassId), // ElementGroupPrototype (data object) representing model element on the toolbox.
						new global::System.ComponentModel.ToolboxItemFilterAttribute[] { // Collection of ToolboxItemFilterAttribute objects that determine visibility of the toolbox item.
						new global::System.ComponentModel.ToolboxItemFilterAttribute(ToolboxFilterString, global::System.ComponentModel.ToolboxItemFilterType.Require) 
						});
					break;
				case "Edom.CRR.CommentToolboxItem":
					// Add Comment shape tool.
					result = new DslDesign::ModelingToolboxItem(
						"Edom.CRR.CommentToolboxItem", // Unique identifier (non-localized) for the toolbox item.
						5, // Position relative to other items in the same toolbox tab.
						resourceManager.GetString("CommentToolboxItem", resourceCulture), // Localized display name for the item.
						(global::System.Drawing.Bitmap)DslDiagrams::ImageHelper.GetImage(resourceManager.GetObject("CommentToolboxBitmap", resourceCulture)), // Image displayed next to the toolbox item.
						"Edom.CRR.CRRToolboxTab", // Unique identifier (non-localized) for the toolbox item tab.
						resourceManager.GetString("CRRToolboxTab", resourceCulture), // Localized display name for the toolbox tab.
						"Comment", // F1 help keyword for the toolbox item.
						resourceManager.GetString("CommentToolboxTooltip", resourceCulture), // Localized tooltip text for the toolbox item.
						CreateElementToolPrototype(store, global::Edom.CRR.Comment.DomainClassId), // ElementGroupPrototype (data object) representing model element on the toolbox.
						new global::System.ComponentModel.ToolboxItemFilterAttribute[] { // Collection of ToolboxItemFilterAttribute objects that determine visibility of the toolbox item.
						new global::System.ComponentModel.ToolboxItemFilterAttribute(ToolboxFilterString, global::System.ComponentModel.ToolboxItemFilterType.Require) 
						});
					break;
				case "Edom.CRR.DataTypeToolboxItem":
					// Add DataType shape tool.
					result = new DslDesign::ModelingToolboxItem(
						"Edom.CRR.DataTypeToolboxItem", // Unique identifier (non-localized) for the toolbox item.
						6, // Position relative to other items in the same toolbox tab.
						resourceManager.GetString("DataTypeToolboxItem", resourceCulture), // Localized display name for the item.
						(global::System.Drawing.Bitmap)DslDiagrams::ImageHelper.GetImage(resourceManager.GetObject("DataTypeToolboxBitmap", resourceCulture)), // Image displayed next to the toolbox item.
						"Edom.CRR.CRRToolboxTab", // Unique identifier (non-localized) for the toolbox item tab.
						resourceManager.GetString("CRRToolboxTab", resourceCulture), // Localized display name for the toolbox tab.
						"DataType", // F1 help keyword for the toolbox item.
						resourceManager.GetString("DataTypeToolboxTooltip", resourceCulture), // Localized tooltip text for the toolbox item.
						CreateElementToolPrototype(store, global::Edom.CRR.DataType.DomainClassId), // ElementGroupPrototype (data object) representing model element on the toolbox.
						new global::System.ComponentModel.ToolboxItemFilterAttribute[] { // Collection of ToolboxItemFilterAttribute objects that determine visibility of the toolbox item.
						new global::System.ComponentModel.ToolboxItemFilterAttribute(ToolboxFilterString, global::System.ComponentModel.ToolboxItemFilterType.Require) 
						});
					break;
				case "Edom.CRR.AttributeHasDataTypeToolboxItem":

					// Add AttributeHasDataType connector tool.
					result = new DslDesign::ModelingToolboxItem(
						"Edom.CRR.AttributeHasDataTypeToolboxItem", // Unique identifier (non-localized) for the toolbox item.
						7, // Position relative to other items in the same toolbox tab.
						resourceManager.GetString("AttributeHasDataTypeToolboxItem", resourceCulture), // Localized display name for the item.
						(global::System.Drawing.Bitmap)DslDiagrams::ImageHelper.GetImage(resourceManager.GetObject("AttributeHasDataTypeToolboxBitmap", resourceCulture)), // Image displayed next to the toolbox item.				
						"Edom.CRR.CRRToolboxTab", // Unique identifier (non-localized) for the toolbox item tab.
						resourceManager.GetString("CRRToolboxTab", resourceCulture), // Localized display name for the toolbox tab.
						"AttributeHasDataType", // F1 help keyword for the toolbox item.
						resourceManager.GetString("AttributeHasDataTypeToolboxTooltip", resourceCulture), // Localized tooltip text for the toolbox item.
						null, // Connector toolbox items do not have an underlying data object.
						new global::System.ComponentModel.ToolboxItemFilterAttribute[] { // Collection of ToolboxItemFilterAttribute objects that determine visibility of the toolbox item.
							new global::System.ComponentModel.ToolboxItemFilterAttribute(ToolboxFilterString, global::System.ComponentModel.ToolboxItemFilterType.Require), 
							new global::System.ComponentModel.ToolboxItemFilterAttribute(AttributeHasDataTypeFilterString)
						});
					break;
				case "Edom.CRR.UserHasAttributeToolboxItem":

					// Add UserHasAttribute connector tool.
					result = new DslDesign::ModelingToolboxItem(
						"Edom.CRR.UserHasAttributeToolboxItem", // Unique identifier (non-localized) for the toolbox item.
						8, // Position relative to other items in the same toolbox tab.
						resourceManager.GetString("UserHasAttributeToolboxItem", resourceCulture), // Localized display name for the item.
						(global::System.Drawing.Bitmap)DslDiagrams::ImageHelper.GetImage(resourceManager.GetObject("UserHasAttributeToolboxBitmap", resourceCulture)), // Image displayed next to the toolbox item.				
						"Edom.CRR.CRRToolboxTab", // Unique identifier (non-localized) for the toolbox item tab.
						resourceManager.GetString("CRRToolboxTab", resourceCulture), // Localized display name for the toolbox tab.
						"UserHasAttribute", // F1 help keyword for the toolbox item.
						resourceManager.GetString("UserHasAttributeToolboxTooltip", resourceCulture), // Localized tooltip text for the toolbox item.
						null, // Connector toolbox items do not have an underlying data object.
						new global::System.ComponentModel.ToolboxItemFilterAttribute[] { // Collection of ToolboxItemFilterAttribute objects that determine visibility of the toolbox item.
							new global::System.ComponentModel.ToolboxItemFilterAttribute(ToolboxFilterString, global::System.ComponentModel.ToolboxItemFilterType.Require), 
							new global::System.ComponentModel.ToolboxItemFilterAttribute(UserHasAttributeFilterString)
						});
					break;
				case "Edom.CRR.CommentHasAttributeToolboxItem":

					// Add CommentHasAttribute connector tool.
					result = new DslDesign::ModelingToolboxItem(
						"Edom.CRR.CommentHasAttributeToolboxItem", // Unique identifier (non-localized) for the toolbox item.
						9, // Position relative to other items in the same toolbox tab.
						resourceManager.GetString("CommentHasAttributeToolboxItem", resourceCulture), // Localized display name for the item.
						(global::System.Drawing.Bitmap)DslDiagrams::ImageHelper.GetImage(resourceManager.GetObject("CommentHasAttributeToolboxBitmap", resourceCulture)), // Image displayed next to the toolbox item.				
						"Edom.CRR.CRRToolboxTab", // Unique identifier (non-localized) for the toolbox item tab.
						resourceManager.GetString("CRRToolboxTab", resourceCulture), // Localized display name for the toolbox tab.
						"CommentHasAttribute", // F1 help keyword for the toolbox item.
						resourceManager.GetString("CommentHasAttributeToolboxTooltip", resourceCulture), // Localized tooltip text for the toolbox item.
						null, // Connector toolbox items do not have an underlying data object.
						new global::System.ComponentModel.ToolboxItemFilterAttribute[] { // Collection of ToolboxItemFilterAttribute objects that determine visibility of the toolbox item.
							new global::System.ComponentModel.ToolboxItemFilterAttribute(ToolboxFilterString, global::System.ComponentModel.ToolboxItemFilterType.Require), 
							new global::System.ComponentModel.ToolboxItemFilterAttribute(CommentHasAttributeFilterString)
						});
					break;
				case "Edom.CRR.ItemHasCommentToolboxItem":

					// Add ItemHasComment connector tool.
					result = new DslDesign::ModelingToolboxItem(
						"Edom.CRR.ItemHasCommentToolboxItem", // Unique identifier (non-localized) for the toolbox item.
						10, // Position relative to other items in the same toolbox tab.
						resourceManager.GetString("ItemHasCommentToolboxItem", resourceCulture), // Localized display name for the item.
						(global::System.Drawing.Bitmap)DslDiagrams::ImageHelper.GetImage(resourceManager.GetObject("ItemHasCommentToolboxBitmap", resourceCulture)), // Image displayed next to the toolbox item.				
						"Edom.CRR.CRRToolboxTab", // Unique identifier (non-localized) for the toolbox item tab.
						resourceManager.GetString("CRRToolboxTab", resourceCulture), // Localized display name for the toolbox tab.
						"ItemHasComment", // F1 help keyword for the toolbox item.
						resourceManager.GetString("ItemHasCommentToolboxTooltip", resourceCulture), // Localized tooltip text for the toolbox item.
						null, // Connector toolbox items do not have an underlying data object.
						new global::System.ComponentModel.ToolboxItemFilterAttribute[] { // Collection of ToolboxItemFilterAttribute objects that determine visibility of the toolbox item.
							new global::System.ComponentModel.ToolboxItemFilterAttribute(ToolboxFilterString, global::System.ComponentModel.ToolboxItemFilterType.Require), 
							new global::System.ComponentModel.ToolboxItemFilterAttribute(ItemHasCommentFilterString)
						});
					break;
				case "Edom.CRR.RateToolboxItem":
					// Add Rate shape tool.
					result = new DslDesign::ModelingToolboxItem(
						"Edom.CRR.RateToolboxItem", // Unique identifier (non-localized) for the toolbox item.
						11, // Position relative to other items in the same toolbox tab.
						resourceManager.GetString("RateToolboxItem", resourceCulture), // Localized display name for the item.
						(global::System.Drawing.Bitmap)DslDiagrams::ImageHelper.GetImage(resourceManager.GetObject("RateToolboxBitmap", resourceCulture)), // Image displayed next to the toolbox item.
						"Edom.CRR.CRRToolboxTab", // Unique identifier (non-localized) for the toolbox item tab.
						resourceManager.GetString("CRRToolboxTab", resourceCulture), // Localized display name for the toolbox tab.
						"Rate", // F1 help keyword for the toolbox item.
						resourceManager.GetString("RateToolboxTooltip", resourceCulture), // Localized tooltip text for the toolbox item.
						CreateElementToolPrototype(store, global::Edom.CRR.Rate.DomainClassId), // ElementGroupPrototype (data object) representing model element on the toolbox.
						new global::System.ComponentModel.ToolboxItemFilterAttribute[] { // Collection of ToolboxItemFilterAttribute objects that determine visibility of the toolbox item.
						new global::System.ComponentModel.ToolboxItemFilterAttribute(ToolboxFilterString, global::System.ComponentModel.ToolboxItemFilterType.Require) 
						});
					break;
				case "Edom.CRR.RateHasAttributesToolboxItem":

					// Add RateHasAttributes connector tool.
					result = new DslDesign::ModelingToolboxItem(
						"Edom.CRR.RateHasAttributesToolboxItem", // Unique identifier (non-localized) for the toolbox item.
						12, // Position relative to other items in the same toolbox tab.
						resourceManager.GetString("RateHasAttributesToolboxItem", resourceCulture), // Localized display name for the item.
						(global::System.Drawing.Bitmap)DslDiagrams::ImageHelper.GetImage(resourceManager.GetObject("RateHasAttributesToolboxBitmap", resourceCulture)), // Image displayed next to the toolbox item.				
						"Edom.CRR.CRRToolboxTab", // Unique identifier (non-localized) for the toolbox item tab.
						resourceManager.GetString("CRRToolboxTab", resourceCulture), // Localized display name for the toolbox tab.
						"RateHasAttributes", // F1 help keyword for the toolbox item.
						resourceManager.GetString("RateHasAttributesToolboxTooltip", resourceCulture), // Localized tooltip text for the toolbox item.
						null, // Connector toolbox items do not have an underlying data object.
						new global::System.ComponentModel.ToolboxItemFilterAttribute[] { // Collection of ToolboxItemFilterAttribute objects that determine visibility of the toolbox item.
							new global::System.ComponentModel.ToolboxItemFilterAttribute(ToolboxFilterString, global::System.ComponentModel.ToolboxItemFilterType.Require), 
							new global::System.ComponentModel.ToolboxItemFilterAttribute(RateHasAttributesFilterString)
						});
					break;
				case "Edom.CRR.ItemHasRateToolboxItem":

					// Add ItemHasRate connector tool.
					result = new DslDesign::ModelingToolboxItem(
						"Edom.CRR.ItemHasRateToolboxItem", // Unique identifier (non-localized) for the toolbox item.
						13, // Position relative to other items in the same toolbox tab.
						resourceManager.GetString("ItemHasRateToolboxItem", resourceCulture), // Localized display name for the item.
						(global::System.Drawing.Bitmap)DslDiagrams::ImageHelper.GetImage(resourceManager.GetObject("ItemHasRateToolboxBitmap", resourceCulture)), // Image displayed next to the toolbox item.				
						"Edom.CRR.CRRToolboxTab", // Unique identifier (non-localized) for the toolbox item tab.
						resourceManager.GetString("CRRToolboxTab", resourceCulture), // Localized display name for the toolbox tab.
						"ItemHasRate", // F1 help keyword for the toolbox item.
						resourceManager.GetString("ItemHasRateToolboxTooltip", resourceCulture), // Localized tooltip text for the toolbox item.
						null, // Connector toolbox items do not have an underlying data object.
						new global::System.ComponentModel.ToolboxItemFilterAttribute[] { // Collection of ToolboxItemFilterAttribute objects that determine visibility of the toolbox item.
							new global::System.ComponentModel.ToolboxItemFilterAttribute(ToolboxFilterString, global::System.ComponentModel.ToolboxItemFilterType.Require), 
							new global::System.ComponentModel.ToolboxItemFilterAttribute(ItemHasRateFilterString)
						});
					break;
				case "Edom.CRR.ReviewToolboxItem":
					// Add Review shape tool.
					result = new DslDesign::ModelingToolboxItem(
						"Edom.CRR.ReviewToolboxItem", // Unique identifier (non-localized) for the toolbox item.
						14, // Position relative to other items in the same toolbox tab.
						resourceManager.GetString("ReviewToolboxItem", resourceCulture), // Localized display name for the item.
						(global::System.Drawing.Bitmap)DslDiagrams::ImageHelper.GetImage(resourceManager.GetObject("ReviewToolboxBitmap", resourceCulture)), // Image displayed next to the toolbox item.
						"Edom.CRR.CRRToolboxTab", // Unique identifier (non-localized) for the toolbox item tab.
						resourceManager.GetString("CRRToolboxTab", resourceCulture), // Localized display name for the toolbox tab.
						"Review", // F1 help keyword for the toolbox item.
						resourceManager.GetString("ReviewToolboxTooltip", resourceCulture), // Localized tooltip text for the toolbox item.
						CreateElementToolPrototype(store, global::Edom.CRR.Review.DomainClassId), // ElementGroupPrototype (data object) representing model element on the toolbox.
						new global::System.ComponentModel.ToolboxItemFilterAttribute[] { // Collection of ToolboxItemFilterAttribute objects that determine visibility of the toolbox item.
						new global::System.ComponentModel.ToolboxItemFilterAttribute(ToolboxFilterString, global::System.ComponentModel.ToolboxItemFilterType.Require) 
						});
					break;
				case "Edom.CRR.RateHasReviewToolboxItem":

					// Add RateHasReview connector tool.
					result = new DslDesign::ModelingToolboxItem(
						"Edom.CRR.RateHasReviewToolboxItem", // Unique identifier (non-localized) for the toolbox item.
						15, // Position relative to other items in the same toolbox tab.
						resourceManager.GetString("RateHasReviewToolboxItem", resourceCulture), // Localized display name for the item.
						(global::System.Drawing.Bitmap)DslDiagrams::ImageHelper.GetImage(resourceManager.GetObject("RateHasReviewToolboxBitmap", resourceCulture)), // Image displayed next to the toolbox item.				
						"Edom.CRR.CRRToolboxTab", // Unique identifier (non-localized) for the toolbox item tab.
						resourceManager.GetString("CRRToolboxTab", resourceCulture), // Localized display name for the toolbox tab.
						"RateHasReview", // F1 help keyword for the toolbox item.
						resourceManager.GetString("RateHasReviewToolboxTooltip", resourceCulture), // Localized tooltip text for the toolbox item.
						null, // Connector toolbox items do not have an underlying data object.
						new global::System.ComponentModel.ToolboxItemFilterAttribute[] { // Collection of ToolboxItemFilterAttribute objects that determine visibility of the toolbox item.
							new global::System.ComponentModel.ToolboxItemFilterAttribute(ToolboxFilterString, global::System.ComponentModel.ToolboxItemFilterType.Require), 
							new global::System.ComponentModel.ToolboxItemFilterAttribute(RateHasReviewFilterString)
						});
					break;
				case "Edom.CRR.RateHasUserToolboxItem":

					// Add RateHasUser connector tool.
					result = new DslDesign::ModelingToolboxItem(
						"Edom.CRR.RateHasUserToolboxItem", // Unique identifier (non-localized) for the toolbox item.
						16, // Position relative to other items in the same toolbox tab.
						resourceManager.GetString("RateHasUserToolboxItem", resourceCulture), // Localized display name for the item.
						(global::System.Drawing.Bitmap)DslDiagrams::ImageHelper.GetImage(resourceManager.GetObject("RateHasUserToolboxBitmap", resourceCulture)), // Image displayed next to the toolbox item.				
						"Edom.CRR.CRRToolboxTab", // Unique identifier (non-localized) for the toolbox item tab.
						resourceManager.GetString("CRRToolboxTab", resourceCulture), // Localized display name for the toolbox tab.
						"RateHasUser", // F1 help keyword for the toolbox item.
						resourceManager.GetString("RateHasUserToolboxTooltip", resourceCulture), // Localized tooltip text for the toolbox item.
						null, // Connector toolbox items do not have an underlying data object.
						new global::System.ComponentModel.ToolboxItemFilterAttribute[] { // Collection of ToolboxItemFilterAttribute objects that determine visibility of the toolbox item.
							new global::System.ComponentModel.ToolboxItemFilterAttribute(ToolboxFilterString, global::System.ComponentModel.ToolboxItemFilterType.Require), 
							new global::System.ComponentModel.ToolboxItemFilterAttribute(RateHasUserFilterString)
						});
					break;
				case "Edom.CRR.CommentHasUserToolboxItem":

					// Add CommentHasUser connector tool.
					result = new DslDesign::ModelingToolboxItem(
						"Edom.CRR.CommentHasUserToolboxItem", // Unique identifier (non-localized) for the toolbox item.
						17, // Position relative to other items in the same toolbox tab.
						resourceManager.GetString("CommentHasUserToolboxItem", resourceCulture), // Localized display name for the item.
						(global::System.Drawing.Bitmap)DslDiagrams::ImageHelper.GetImage(resourceManager.GetObject("CommentHasUserToolboxBitmap", resourceCulture)), // Image displayed next to the toolbox item.				
						"Edom.CRR.CRRToolboxTab", // Unique identifier (non-localized) for the toolbox item tab.
						resourceManager.GetString("CRRToolboxTab", resourceCulture), // Localized display name for the toolbox tab.
						"CommentHasUser", // F1 help keyword for the toolbox item.
						resourceManager.GetString("CommentHasUserToolboxTooltip", resourceCulture), // Localized tooltip text for the toolbox item.
						null, // Connector toolbox items do not have an underlying data object.
						new global::System.ComponentModel.ToolboxItemFilterAttribute[] { // Collection of ToolboxItemFilterAttribute objects that determine visibility of the toolbox item.
							new global::System.ComponentModel.ToolboxItemFilterAttribute(ToolboxFilterString, global::System.ComponentModel.ToolboxItemFilterType.Require), 
							new global::System.ComponentModel.ToolboxItemFilterAttribute(CommentHasUserFilterString)
						});
					break;
				case "Edom.CRR.ReviewHasAttributesToolboxItem":

					// Add ReviewHasAttributes connector tool.
					result = new DslDesign::ModelingToolboxItem(
						"Edom.CRR.ReviewHasAttributesToolboxItem", // Unique identifier (non-localized) for the toolbox item.
						18, // Position relative to other items in the same toolbox tab.
						resourceManager.GetString("ReviewHasAttributesToolboxItem", resourceCulture), // Localized display name for the item.
						(global::System.Drawing.Bitmap)DslDiagrams::ImageHelper.GetImage(resourceManager.GetObject("ReviewHasAttributesToolboxBitmap", resourceCulture)), // Image displayed next to the toolbox item.				
						"Edom.CRR.CRRToolboxTab", // Unique identifier (non-localized) for the toolbox item tab.
						resourceManager.GetString("CRRToolboxTab", resourceCulture), // Localized display name for the toolbox tab.
						"ReviewHasAttributes", // F1 help keyword for the toolbox item.
						resourceManager.GetString("ReviewHasAttributesToolboxTooltip", resourceCulture), // Localized tooltip text for the toolbox item.
						null, // Connector toolbox items do not have an underlying data object.
						new global::System.ComponentModel.ToolboxItemFilterAttribute[] { // Collection of ToolboxItemFilterAttribute objects that determine visibility of the toolbox item.
							new global::System.ComponentModel.ToolboxItemFilterAttribute(ToolboxFilterString, global::System.ComponentModel.ToolboxItemFilterType.Require), 
							new global::System.ComponentModel.ToolboxItemFilterAttribute(ReviewHasAttributesFilterString)
						});
					break;
				case "Edom.CRR.ApprovalProcessToolboxItem":
					// Add ApprovalProcess shape tool.
					result = new DslDesign::ModelingToolboxItem(
						"Edom.CRR.ApprovalProcessToolboxItem", // Unique identifier (non-localized) for the toolbox item.
						19, // Position relative to other items in the same toolbox tab.
						resourceManager.GetString("ApprovalProcessToolboxItem", resourceCulture), // Localized display name for the item.
						(global::System.Drawing.Bitmap)DslDiagrams::ImageHelper.GetImage(resourceManager.GetObject("ApprovalProcessToolboxBitmap", resourceCulture)), // Image displayed next to the toolbox item.
						"Edom.CRR.CRRToolboxTab", // Unique identifier (non-localized) for the toolbox item tab.
						resourceManager.GetString("CRRToolboxTab", resourceCulture), // Localized display name for the toolbox tab.
						"ApprovalProcess", // F1 help keyword for the toolbox item.
						resourceManager.GetString("ApprovalProcessToolboxTooltip", resourceCulture), // Localized tooltip text for the toolbox item.
						CreateElementToolPrototype(store, global::Edom.CRR.ApprovalProcess.DomainClassId), // ElementGroupPrototype (data object) representing model element on the toolbox.
						new global::System.ComponentModel.ToolboxItemFilterAttribute[] { // Collection of ToolboxItemFilterAttribute objects that determine visibility of the toolbox item.
						new global::System.ComponentModel.ToolboxItemFilterAttribute(ToolboxFilterString, global::System.ComponentModel.ToolboxItemFilterType.Require) 
						});
					break;
				case "Edom.CRR.ApprovalStartToolboxItem":
					// Add ApprovalStart shape tool.
					result = new DslDesign::ModelingToolboxItem(
						"Edom.CRR.ApprovalStartToolboxItem", // Unique identifier (non-localized) for the toolbox item.
						20, // Position relative to other items in the same toolbox tab.
						resourceManager.GetString("ApprovalStartToolboxItem", resourceCulture), // Localized display name for the item.
						(global::System.Drawing.Bitmap)DslDiagrams::ImageHelper.GetImage(resourceManager.GetObject("ApprovalStartToolboxBitmap", resourceCulture)), // Image displayed next to the toolbox item.
						"Edom.CRR.CRRToolboxTab", // Unique identifier (non-localized) for the toolbox item tab.
						resourceManager.GetString("CRRToolboxTab", resourceCulture), // Localized display name for the toolbox tab.
						"ApprovalStart", // F1 help keyword for the toolbox item.
						resourceManager.GetString("ApprovalStartToolboxTooltip", resourceCulture), // Localized tooltip text for the toolbox item.
						CreateElementToolPrototype(store, global::Edom.CRR.ApprovalStart.DomainClassId), // ElementGroupPrototype (data object) representing model element on the toolbox.
						new global::System.ComponentModel.ToolboxItemFilterAttribute[] { // Collection of ToolboxItemFilterAttribute objects that determine visibility of the toolbox item.
						new global::System.ComponentModel.ToolboxItemFilterAttribute(ToolboxFilterString, global::System.ComponentModel.ToolboxItemFilterType.Require) 
						});
					break;
				case "Edom.CRR.ApprovalOutcomeToolboxItem":
					// Add ApprovalOutcome shape tool.
					result = new DslDesign::ModelingToolboxItem(
						"Edom.CRR.ApprovalOutcomeToolboxItem", // Unique identifier (non-localized) for the toolbox item.
						21, // Position relative to other items in the same toolbox tab.
						resourceManager.GetString("ApprovalOutcomeToolboxItem", resourceCulture), // Localized display name for the item.
						(global::System.Drawing.Bitmap)DslDiagrams::ImageHelper.GetImage(resourceManager.GetObject("ApprovalOutcomeToolboxBitmap", resourceCulture)), // Image displayed next to the toolbox item.
						"Edom.CRR.CRRToolboxTab", // Unique identifier (non-localized) for the toolbox item tab.
						resourceManager.GetString("CRRToolboxTab", resourceCulture), // Localized display name for the toolbox tab.
						"ApprovalOutcome", // F1 help keyword for the toolbox item.
						resourceManager.GetString("ApprovalOutcomeToolboxTooltip", resourceCulture), // Localized tooltip text for the toolbox item.
						CreateElementToolPrototype(store, global::Edom.CRR.ApprovalOutcome.DomainClassId), // ElementGroupPrototype (data object) representing model element on the toolbox.
						new global::System.ComponentModel.ToolboxItemFilterAttribute[] { // Collection of ToolboxItemFilterAttribute objects that determine visibility of the toolbox item.
						new global::System.ComponentModel.ToolboxItemFilterAttribute(ToolboxFilterString, global::System.ComponentModel.ToolboxItemFilterType.Require) 
						});
					break;
				case "Edom.CRR.ApprovalStepToolboxItem":
					// Add ApprovalStep shape tool.
					result = new DslDesign::ModelingToolboxItem(
						"Edom.CRR.ApprovalStepToolboxItem", // Unique identifier (non-localized) for the toolbox item.
						22, // Position relative to other items in the same toolbox tab.
						resourceManager.GetString("ApprovalStepToolboxItem", resourceCulture), // Localized display name for the item.
						(global::System.Drawing.Bitmap)DslDiagrams::ImageHelper.GetImage(resourceManager.GetObject("ApprovalStepToolboxBitmap", resourceCulture)), // Image displayed next to the toolbox item.
						"Edom.CRR.CRRToolboxTab", // Unique identifier (non-localized) for the toolbox item tab.
						resourceManager.GetString("CRRToolboxTab", resourceCulture), // Localized display name for the toolbox tab.
						"ApprovalStep", // F1 help keyword for the toolbox item.
						resourceManager.GetString("ApprovalStepToolboxTooltip", resourceCulture), // Localized tooltip text for the toolbox item.
						CreateElementToolPrototype(store, global::Edom.CRR.ApprovalStep.DomainClassId), // ElementGroupPrototype (data object) representing model element on the toolbox.
						new global::System.ComponentModel.ToolboxItemFilterAttribute[] { // Collection of ToolboxItemFilterAttribute objects that determine visibility of the toolbox item.
						new global::System.ComponentModel.ToolboxItemFilterAttribute(ToolboxFilterString, global::System.ComponentModel.ToolboxItemFilterType.Require) 
						});
					break;
				case "Edom.CRR.ApprovalProcessHasAttributesToolboxItem":

					// Add ApprovalProcessHasAttributes connector tool.
					result = new DslDesign::ModelingToolboxItem(
						"Edom.CRR.ApprovalProcessHasAttributesToolboxItem", // Unique identifier (non-localized) for the toolbox item.
						23, // Position relative to other items in the same toolbox tab.
						resourceManager.GetString("ApprovalProcessHasAttributesToolboxItem", resourceCulture), // Localized display name for the item.
						(global::System.Drawing.Bitmap)DslDiagrams::ImageHelper.GetImage(resourceManager.GetObject("ApprovalProcessHasAttributesToolboxBitmap", resourceCulture)), // Image displayed next to the toolbox item.				
						"Edom.CRR.CRRToolboxTab", // Unique identifier (non-localized) for the toolbox item tab.
						resourceManager.GetString("CRRToolboxTab", resourceCulture), // Localized display name for the toolbox tab.
						"ApprovalProcessHasAttributes", // F1 help keyword for the toolbox item.
						resourceManager.GetString("ApprovalProcessHasAttributesToolboxTooltip", resourceCulture), // Localized tooltip text for the toolbox item.
						null, // Connector toolbox items do not have an underlying data object.
						new global::System.ComponentModel.ToolboxItemFilterAttribute[] { // Collection of ToolboxItemFilterAttribute objects that determine visibility of the toolbox item.
							new global::System.ComponentModel.ToolboxItemFilterAttribute(ToolboxFilterString, global::System.ComponentModel.ToolboxItemFilterType.Require), 
							new global::System.ComponentModel.ToolboxItemFilterAttribute(ApprovalProcessHasAttributesFilterString)
						});
					break;
				case "Edom.CRR.ApprovalStepHasOutcomeToolboxItem":

					// Add ApprovalStepHasOutcome connector tool.
					result = new DslDesign::ModelingToolboxItem(
						"Edom.CRR.ApprovalStepHasOutcomeToolboxItem", // Unique identifier (non-localized) for the toolbox item.
						24, // Position relative to other items in the same toolbox tab.
						resourceManager.GetString("ApprovalStepHasOutcomeToolboxItem", resourceCulture), // Localized display name for the item.
						(global::System.Drawing.Bitmap)DslDiagrams::ImageHelper.GetImage(resourceManager.GetObject("ApprovalStepHasOutcomeToolboxBitmap", resourceCulture)), // Image displayed next to the toolbox item.				
						"Edom.CRR.CRRToolboxTab", // Unique identifier (non-localized) for the toolbox item tab.
						resourceManager.GetString("CRRToolboxTab", resourceCulture), // Localized display name for the toolbox tab.
						"ApprovalStepHasOutcome", // F1 help keyword for the toolbox item.
						resourceManager.GetString("ApprovalStepHasOutcomeToolboxTooltip", resourceCulture), // Localized tooltip text for the toolbox item.
						null, // Connector toolbox items do not have an underlying data object.
						new global::System.ComponentModel.ToolboxItemFilterAttribute[] { // Collection of ToolboxItemFilterAttribute objects that determine visibility of the toolbox item.
							new global::System.ComponentModel.ToolboxItemFilterAttribute(ToolboxFilterString, global::System.ComponentModel.ToolboxItemFilterType.Require), 
							new global::System.ComponentModel.ToolboxItemFilterAttribute(ApprovalStepHasOutcomeFilterString)
						});
					break;
				case "Edom.CRR.ApprovalStepHasAttributesToolboxItem":

					// Add ApprovalStepHasAttributes connector tool.
					result = new DslDesign::ModelingToolboxItem(
						"Edom.CRR.ApprovalStepHasAttributesToolboxItem", // Unique identifier (non-localized) for the toolbox item.
						25, // Position relative to other items in the same toolbox tab.
						resourceManager.GetString("ApprovalStepHasAttributesToolboxItem", resourceCulture), // Localized display name for the item.
						(global::System.Drawing.Bitmap)DslDiagrams::ImageHelper.GetImage(resourceManager.GetObject("ApprovalStepHasAttributesToolboxBitmap", resourceCulture)), // Image displayed next to the toolbox item.				
						"Edom.CRR.CRRToolboxTab", // Unique identifier (non-localized) for the toolbox item tab.
						resourceManager.GetString("CRRToolboxTab", resourceCulture), // Localized display name for the toolbox tab.
						"ApprovalStepHasAttributes", // F1 help keyword for the toolbox item.
						resourceManager.GetString("ApprovalStepHasAttributesToolboxTooltip", resourceCulture), // Localized tooltip text for the toolbox item.
						null, // Connector toolbox items do not have an underlying data object.
						new global::System.ComponentModel.ToolboxItemFilterAttribute[] { // Collection of ToolboxItemFilterAttribute objects that determine visibility of the toolbox item.
							new global::System.ComponentModel.ToolboxItemFilterAttribute(ToolboxFilterString, global::System.ComponentModel.ToolboxItemFilterType.Require), 
							new global::System.ComponentModel.ToolboxItemFilterAttribute(ApprovalStepHasAttributesFilterString)
						});
					break;
				case "Edom.CRR.ApprovalStepHasNextStepToolboxItem":

					// Add ApprovalStepHasNextStep connector tool.
					result = new DslDesign::ModelingToolboxItem(
						"Edom.CRR.ApprovalStepHasNextStepToolboxItem", // Unique identifier (non-localized) for the toolbox item.
						26, // Position relative to other items in the same toolbox tab.
						resourceManager.GetString("ApprovalStepHasNextStepToolboxItem", resourceCulture), // Localized display name for the item.
						(global::System.Drawing.Bitmap)DslDiagrams::ImageHelper.GetImage(resourceManager.GetObject("ApprovalStepHasNextStepToolboxBitmap", resourceCulture)), // Image displayed next to the toolbox item.				
						"Edom.CRR.CRRToolboxTab", // Unique identifier (non-localized) for the toolbox item tab.
						resourceManager.GetString("CRRToolboxTab", resourceCulture), // Localized display name for the toolbox tab.
						"ApprovalStepHasNextStep", // F1 help keyword for the toolbox item.
						resourceManager.GetString("ApprovalStepHasNextStepToolboxTooltip", resourceCulture), // Localized tooltip text for the toolbox item.
						null, // Connector toolbox items do not have an underlying data object.
						new global::System.ComponentModel.ToolboxItemFilterAttribute[] { // Collection of ToolboxItemFilterAttribute objects that determine visibility of the toolbox item.
							new global::System.ComponentModel.ToolboxItemFilterAttribute(ToolboxFilterString, global::System.ComponentModel.ToolboxItemFilterType.Require), 
							new global::System.ComponentModel.ToolboxItemFilterAttribute(ApprovalStepHasNextStepFilterString)
						});
					break;
				case "Edom.CRR.ApprovalStartHasStepToolboxItem":

					// Add ApprovalStartHasStep connector tool.
					result = new DslDesign::ModelingToolboxItem(
						"Edom.CRR.ApprovalStartHasStepToolboxItem", // Unique identifier (non-localized) for the toolbox item.
						27, // Position relative to other items in the same toolbox tab.
						resourceManager.GetString("ApprovalStartHasStepToolboxItem", resourceCulture), // Localized display name for the item.
						(global::System.Drawing.Bitmap)DslDiagrams::ImageHelper.GetImage(resourceManager.GetObject("ApprovalStartHasStepToolboxBitmap", resourceCulture)), // Image displayed next to the toolbox item.				
						"Edom.CRR.CRRToolboxTab", // Unique identifier (non-localized) for the toolbox item tab.
						resourceManager.GetString("CRRToolboxTab", resourceCulture), // Localized display name for the toolbox tab.
						"ApprovalStartHasStep", // F1 help keyword for the toolbox item.
						resourceManager.GetString("ApprovalStartHasStepToolboxTooltip", resourceCulture), // Localized tooltip text for the toolbox item.
						null, // Connector toolbox items do not have an underlying data object.
						new global::System.ComponentModel.ToolboxItemFilterAttribute[] { // Collection of ToolboxItemFilterAttribute objects that determine visibility of the toolbox item.
							new global::System.ComponentModel.ToolboxItemFilterAttribute(ToolboxFilterString, global::System.ComponentModel.ToolboxItemFilterType.Require), 
							new global::System.ComponentModel.ToolboxItemFilterAttribute(ApprovalStartHasStepFilterString)
						});
					break;
				case "Edom.CRR.CommentHasApprovalProcessToolboxItem":

					// Add CommentHasApprovalProcess connector tool.
					result = new DslDesign::ModelingToolboxItem(
						"Edom.CRR.CommentHasApprovalProcessToolboxItem", // Unique identifier (non-localized) for the toolbox item.
						28, // Position relative to other items in the same toolbox tab.
						resourceManager.GetString("CommentHasApprovalProcessToolboxItem", resourceCulture), // Localized display name for the item.
						(global::System.Drawing.Bitmap)DslDiagrams::ImageHelper.GetImage(resourceManager.GetObject("CommentHasApprovalProcessToolboxBitmap", resourceCulture)), // Image displayed next to the toolbox item.				
						"Edom.CRR.CRRToolboxTab", // Unique identifier (non-localized) for the toolbox item tab.
						resourceManager.GetString("CRRToolboxTab", resourceCulture), // Localized display name for the toolbox tab.
						"CommentHasApprovalProcess", // F1 help keyword for the toolbox item.
						resourceManager.GetString("CommentHasApprovalProcessToolboxTooltip", resourceCulture), // Localized tooltip text for the toolbox item.
						null, // Connector toolbox items do not have an underlying data object.
						new global::System.ComponentModel.ToolboxItemFilterAttribute[] { // Collection of ToolboxItemFilterAttribute objects that determine visibility of the toolbox item.
							new global::System.ComponentModel.ToolboxItemFilterAttribute(ToolboxFilterString, global::System.ComponentModel.ToolboxItemFilterType.Require), 
							new global::System.ComponentModel.ToolboxItemFilterAttribute(CommentHasApprovalProcessFilterString)
						});
					break;
				case "Edom.CRR.ReviewHasApprovalProcessToolboxItem":

					// Add ReviewHasApprovalProcess connector tool.
					result = new DslDesign::ModelingToolboxItem(
						"Edom.CRR.ReviewHasApprovalProcessToolboxItem", // Unique identifier (non-localized) for the toolbox item.
						29, // Position relative to other items in the same toolbox tab.
						resourceManager.GetString("ReviewHasApprovalProcessToolboxItem", resourceCulture), // Localized display name for the item.
						(global::System.Drawing.Bitmap)DslDiagrams::ImageHelper.GetImage(resourceManager.GetObject("ReviewHasApprovalProcessToolboxBitmap", resourceCulture)), // Image displayed next to the toolbox item.				
						"Edom.CRR.CRRToolboxTab", // Unique identifier (non-localized) for the toolbox item tab.
						resourceManager.GetString("CRRToolboxTab", resourceCulture), // Localized display name for the toolbox tab.
						"ReviewHasApprovalProcess", // F1 help keyword for the toolbox item.
						resourceManager.GetString("ReviewHasApprovalProcessToolboxTooltip", resourceCulture), // Localized tooltip text for the toolbox item.
						null, // Connector toolbox items do not have an underlying data object.
						new global::System.ComponentModel.ToolboxItemFilterAttribute[] { // Collection of ToolboxItemFilterAttribute objects that determine visibility of the toolbox item.
							new global::System.ComponentModel.ToolboxItemFilterAttribute(ToolboxFilterString, global::System.ComponentModel.ToolboxItemFilterType.Require), 
							new global::System.ComponentModel.ToolboxItemFilterAttribute(ReviewHasApprovalProcessFilterString)
						});
					break;
				case "Edom.CRR.RateHasApprovalProcessToolboxItem":

					// Add RateHasApprovalProcess connector tool.
					result = new DslDesign::ModelingToolboxItem(
						"Edom.CRR.RateHasApprovalProcessToolboxItem", // Unique identifier (non-localized) for the toolbox item.
						30, // Position relative to other items in the same toolbox tab.
						resourceManager.GetString("RateHasApprovalProcessToolboxItem", resourceCulture), // Localized display name for the item.
						(global::System.Drawing.Bitmap)DslDiagrams::ImageHelper.GetImage(resourceManager.GetObject("RateHasApprovalProcessToolboxBitmap", resourceCulture)), // Image displayed next to the toolbox item.				
						"Edom.CRR.CRRToolboxTab", // Unique identifier (non-localized) for the toolbox item tab.
						resourceManager.GetString("CRRToolboxTab", resourceCulture), // Localized display name for the toolbox tab.
						"RateHasApprovalProcess", // F1 help keyword for the toolbox item.
						resourceManager.GetString("RateHasApprovalProcessToolboxTooltip", resourceCulture), // Localized tooltip text for the toolbox item.
						null, // Connector toolbox items do not have an underlying data object.
						new global::System.ComponentModel.ToolboxItemFilterAttribute[] { // Collection of ToolboxItemFilterAttribute objects that determine visibility of the toolbox item.
							new global::System.ComponentModel.ToolboxItemFilterAttribute(ToolboxFilterString, global::System.ComponentModel.ToolboxItemFilterType.Require), 
							new global::System.ComponentModel.ToolboxItemFilterAttribute(RateHasApprovalProcessFilterString)
						});
					break;
				default:
					break;
			} // end switch
			
			return result;
		}
		

		/// <summary>
		/// The store toe be used for all the toolbox item creation
		/// </summary>
		protected DslModeling::Store ToolboxStore
		{
			get
			{ 
				if (toolboxStore==null)
				{
					toolboxStore = new DslModeling::Store(this.ServiceProvider);
					EventHandler StoreCleanUp = (o, e) =>
					{
						//Since Store implements IDisposable, we need to dispose it when we're finished
						if (this.toolboxStore != null)
						{
							this.toolboxStore.Dispose();
						}
						this.toolboxStore = null;
					};
					//There is no DomainUnload event for the default AppDomain, so we listen for both ProcessExit and DomainUnload
					AppDomain.CurrentDomain.ProcessExit += new EventHandler(StoreCleanUp);
					AppDomain.CurrentDomain.DomainUnload += new EventHandler(StoreCleanUp);
					
					//load the domain model
					toolboxStore.LoadDomainModels(typeof(global::Edom.CRR.CRRDomainModel));
					
				}
				return toolboxStore;
			}
		}
		
		/// <summary>
		/// Given a toolbox item "unique ID" returns the the toolbox item using cached dictionary
		/// </summary>
		/// <param name="itemId">The unique ToolboxItem to retrieve</param>
		private DslDesign::ModelingToolboxItem GetToolboxItem(string itemId)
		{
			DslDesign::ModelingToolboxItem item = null;

			if (!this.toolboxItemCache.TryGetValue(itemId, out item))
			{
				DslModeling::Store store = this.ToolboxStore;
				
				// Open transaction so we can create model elements corresponding to toolbox items.
				using (DslModeling::Transaction t = store.TransactionManager.BeginTransaction("CreateToolboxItems"))
				{
					// Retrieve the specified ToolboxItem from the DSL
					this.toolboxItemCache[itemId] = item = this.GetToolboxItem(itemId, store);
				}
			}

			return item;
		}
		
		/// <summary>
		/// Given a toolbox item "unique ID" and a data format identifier, returns the content of
		/// the data format. 
		/// </summary>
		/// <param name="itemId">The unique ToolboxItem to retrieve data for</param>
		/// <param name="format">The desired format of the resulting data</param>
		public virtual object GetToolboxItemData(string itemId, DataFormats.Format format)
		{
			DslDesign::ModelingToolboxItem item = null;

			global::System.Resources.ResourceManager resourceManager = global::Edom.CRR.CRRDomainModel.SingletonResourceManager;
			global::System.Globalization.CultureInfo resourceCulture = global::System.Globalization.CultureInfo.CurrentUICulture;

			System.Windows.Forms.IDataObject tbxDataObj;

			//get the toolbox item
			item = GetToolboxItem(itemId);

			if (item != null)
			{
				ToolboxItemContainer container = new ToolboxItemContainer(item);
				tbxDataObj = container.ToolboxData;

				if (tbxDataObj.GetDataPresent(format.Name))
				{
					return tbxDataObj.GetData(format.Name);
				}
				else 
				{
					string invalidFormatString = resourceManager.GetString("UnsupportedToolboxFormat", resourceCulture);
					throw new InvalidOperationException(string.Format(resourceCulture, invalidFormatString, format.Name));
				}
			}

			string errorFormatString = resourceManager.GetString("UnresolvedToolboxItem", resourceCulture);
			throw new InvalidOperationException(string.Format(resourceCulture, errorFormatString, itemId));
		}		
	}
}
