package ecommerceRating.typesystem;

/*Generated by MPS */

import jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime;
import jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.typesystem.inference.TypeCheckingContext;
import jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.errors.messageTargets.MessageTarget;
import jetbrains.mps.errors.messageTargets.NodeMessageTarget;
import jetbrains.mps.errors.IErrorReporter;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import org.jetbrains.mps.openapi.language.SProperty;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SConcept;

public class Item_CheckingRules_NonTypesystemRule extends AbstractNonTypesystemRule_Runtime implements NonTypesystemRule_Runtime {
  public Item_CheckingRules_NonTypesystemRule() {
  }
  public void applyRule(final SNode node, final TypeCheckingContext typeCheckingContext, IsApplicableStatus status) {
    if (SPropertyOperations.getString(node, PROPS.name$MnvL) != null && Character.isLowerCase(SPropertyOperations.getString(node, PROPS.name$MnvL).charAt(0))) {
      {
        final MessageTarget errorTarget = new NodeMessageTarget();
        IErrorReporter _reporter_2309309498 = typeCheckingContext.reportTypeError(node, "Name must begin with capital letter", "r:792285ea-ca6a-4f3c-9cd3-86d184a39073(ecommerceRating.typesystem)", "6227873571041811248", null, errorTarget);
      }
    }
    if (SPropertyOperations.getString(node, PROPS.name$MnvL) == null || SPropertyOperations.getString(node, PROPS.name$MnvL) == "") {
      {
        final MessageTarget errorTarget = new NodeMessageTarget();
        IErrorReporter _reporter_2309309498 = typeCheckingContext.reportTypeError(node, "Name should not be null or empty", "r:792285ea-ca6a-4f3c-9cd3-86d184a39073(ecommerceRating.typesystem)", "6227873571041811253", null, errorTarget);
      }
    }
    if (SPropertyOperations.getString(node, PROPS.name$MnvL).contains(" ")) {
      {
        final MessageTarget errorTarget = new NodeMessageTarget();
        IErrorReporter _reporter_2309309498 = typeCheckingContext.reportTypeError(node, "Name should not contains spaces", "r:792285ea-ca6a-4f3c-9cd3-86d184a39073(ecommerceRating.typesystem)", "6227873571041811269", null, errorTarget);
      }
    }
  }
  public SAbstractConcept getApplicableConcept() {
    return CONCEPTS.Item$ps;
  }
  public IsApplicableStatus isApplicableAndPattern(SNode argument) {
    return new IsApplicableStatus(argument.getConcept().isSubConceptOf(getApplicableConcept()), null);
  }
  public boolean overrides() {
    return false;
  }

  private static final class PROPS {
    /*package*/ static final SProperty name$MnvL = MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name");
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept Item$ps = MetaAdapterFactory.getConcept(0x6435327aad3b4146L, 0x871110b700cc9d08L, 0x1c3db74b8a4819cfL, "ecommerceRating.structure.Item");
  }
}
