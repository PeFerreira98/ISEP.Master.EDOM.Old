-- @atlcompiler emftvm
-- @path UCUS=/pt.isep.edom.atb.ucus/model/generated/ucus.ecore
-- @nsURI UML=http://www.eclipse.org/uml2/5.0.0/UML

module generateuml;
create OUT : UML from IN : UCUS;

rule Model2Model {
	from
		m1: UCUS!Model
	to 
		m2: UML!Model (
			name <- m1.name.toLowerCase()
			, packagedElement <- m1.subject->including( m2Domain )
		)
		, m2Domain : UML!Package (
			name <- 'domain'
			, packagedElement <- m1.actor 
		)
		do { 
			('Model ' + m1.name + ' created').debug();
	}
}

rule Subject2Package {
	from
		a1 : UCUS!Subject
	to 
		a2 : UML!Package (
			name <- a1.name.toLowerCase()
			, packagedElement <- Set{ m2Presentation , m2Business, m2Data }
		)
		, m2Presentation : UML!Package (
			name <- 'presentation'
			, packagedElement <- a1.usecase->collect( uc | thisModule.resolveTemp(uc, 'presentation') )  
		)
		, m2Business : UML!Package (
			name <- 'business'
			, packagedElement <- a1.usecase->collect( uc | thisModule.resolveTemp(uc, 'business') ) 
		)
		, m2Data : UML!Package (
			name <- 'data'
			, packagedElement <- a1.usecase->collect( uc | thisModule.resolveTemp(uc, 'repository') ) 
		)	
	do {
		('Package '+a1.name+' created').debug();
	}
}

rule Actor2EntityClass {
	from
		a1 : UCUS!Actor
	to 
		a2 : UML!Class (
			name <- a1.name
		)
	do {
		('Entity Class '+a1.name+' created').debug();
	}
}

rule UseCase2UseCaseRealization {
	from
		a1 : UCUS!UseCase
	to 
		presentation : UML!Class (
			name <- a1.name+'View' 
		)
		, business : UML!Class (
			name <- a1.name+'Controller'
			)
		, repository : UML!Class (
			name <- a1.name+'Repository'
			)
	do {
		('UseCase Realization '+a1.name+' created').debug();
	}
}