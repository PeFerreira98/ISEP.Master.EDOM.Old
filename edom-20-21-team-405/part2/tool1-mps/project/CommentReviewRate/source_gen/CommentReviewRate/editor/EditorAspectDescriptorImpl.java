package CommentReviewRate.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.EditorAspectDescriptorBase;
import org.jetbrains.annotations.NotNull;
import java.util.Collection;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import java.util.Collections;
import jetbrains.mps.lang.smodel.ConceptSwitchIndex;
import jetbrains.mps.lang.smodel.ConceptSwitchIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public class EditorAspectDescriptorImpl extends EditorAspectDescriptorBase {
  @NotNull
  public Collection<ConceptEditor> getDeclaredEditors(SAbstractConcept concept) {
    SAbstractConcept cncpt = ((SAbstractConcept) concept);
    switch (conceptIndex.index(cncpt)) {
      case 0:
        return Collections.<ConceptEditor>singletonList(new AutomaticValidation_Editor());
      case 1:
        return Collections.<ConceptEditor>singletonList(new Comment_Editor());
      case 2:
        return Collections.<ConceptEditor>singletonList(new Field_Editor());
      case 3:
        return Collections.<ConceptEditor>singletonList(new IValidate_Editor());
      case 4:
        return Collections.<ConceptEditor>singletonList(new ManualValidation_Editor());
      case 5:
        return Collections.<ConceptEditor>singletonList(new Model_Editor());
      case 6:
        return Collections.<ConceptEditor>singletonList(new Rating_Editor());
      case 7:
        return Collections.<ConceptEditor>singletonList(new Subject_Editor());
      default:
    }
    return Collections.<ConceptEditor>emptyList();
  }



  private static final ConceptSwitchIndex conceptIndex = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0xf07b76fcfe824d2cL, 0x8d3502e79970824dL, 0x14399b9aded9158cL), MetaIdFactory.conceptId(0xf07b76fcfe824d2cL, 0x8d3502e79970824dL, 0x181a8ce2444b62c9L), MetaIdFactory.conceptId(0xf07b76fcfe824d2cL, 0x8d3502e79970824dL, 0x181a8ce2444b62ccL), MetaIdFactory.conceptId(0xf07b76fcfe824d2cL, 0x8d3502e79970824dL, 0x14399b9aded91589L), MetaIdFactory.conceptId(0xf07b76fcfe824d2cL, 0x8d3502e79970824dL, 0x14399b9adedba655L), MetaIdFactory.conceptId(0xf07b76fcfe824d2cL, 0x8d3502e79970824dL, 0x6166ac460e810705L), MetaIdFactory.conceptId(0xf07b76fcfe824d2cL, 0x8d3502e79970824dL, 0x14399b9adedba652L), MetaIdFactory.conceptId(0xf07b76fcfe824d2cL, 0x8d3502e79970824dL, 0x181a8ce2444b62beL)).seal();
}
